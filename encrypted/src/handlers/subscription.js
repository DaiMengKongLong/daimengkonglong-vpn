(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const fMvqHqTJZ = Math.random() > 0.5; function OasADSrMa(){return Date.now() % 3838;} const PASoAgdph = function(){return btoa('yzAEQWSZa');}; function fwwJrwCLO(){return 'WYTqhSmhn'.length;} function qOpdUtsZm(){return 'ywKCZNZbB'.length;} function pymPPpldP(){return 'BQcSbCQnz'.length;} const rJvyYhtOo = function(){return btoa('ySAWuaJvr');}; function MsXkpUNVt(){return 'klRddprQz'.length;} function dbTZxEFlG(){return 'HQVeLcKgq'.length;} function lZjrfmXOn(){return Math.random() * 455;} const cDbqMLTlF = () => 21; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const QapAgYeVI = '49d5a12ffc20984e88d70b87d479b2ae'; function CKBeCDAAk(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ QapAgYeVI.charCodeAt(i % QapAgYeVI.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== CKBeCDAAk('JA8UJAEwCzMt') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); import { AteZuZZNp } from CKBeCDAAk('f09fIgg3EzM7JQQCMkg7BCUsZ1VeKxQ='); import { FrXABcrcc } from CKBeCDAAk('f09fIgg3EzM7JQQCMkg6CTc6OU8aMg=='); import { SwPuhodcR } from CKBeCDAAk('f09fIgg3EzM7JQQCMkgqDDguMw4Ibw0q'); import { generateLoonConfig } from CKBeCDAAk('f09fIgg3EzM7JQQCMkg1CjknfwsD'); import { generateSurgeConfig } from CKBeCDAAk('f09fIgg3EzM7JQQCMkgqECQuNE8aMg=='); import { PfQiWoUjH } from CKBeCDAAk('f09fNBMwCSVmMg4eJw4+Szw6'); export async function wufwIIQBv(request, env) { const url = new URL(request.url); const pathParts = url.pathname.split('/'); const format = pathParts[2]; const token = url.searchParams.get(CKBeCDAAk('JQ4bJAk=')) || CKBeCDAAk('NQQWIBI1EQ=='); try { const config = await PfQiWoUjH(env, token); if (!config) { return new Response(CKBeCDAAk('GA8GIAswAXY9PgoVL0c2F3YqPg8WKAAsFzc9OA4eYQk2EXYvPhQeJQ=='), { status: Math.floor(404.5) });} let content, contentType, filename; switch (format.toLowerCase()) { case CKBeCDAAk('MwADJFFt'): content = await AteZuZZNp(config); contentType = CKBeCDAAk('JQQINUgpCTcgP1pQIg84FyUsJVwFNQF0XQ=='); filename = CKBeCDAAk('IhQSMgQrDCY9OA4ebxMhEQ=='); break; case CKBeCDAAk('Mg0RMg8='): content = await FrXABcrcc(config); contentType = CKBeCDAAk('MBEALQ46BCIgPg9fOUogBDslakETKQYrFjM9bBQEJ0ph'); filename = CKBeCDAAk('Mg0RMg93HDckPQ=='); break; case CKBeCDAAk('IggeJgU2HQ=='): content = await SwPuhodcR(config); contentType = CKBeCDAAk('MBEALQ46BCIgPg9fKxQ2C21pMgkRMxQ8EWs8JQddeQ=='); filename = CKBeCDAAk('IggeJgU2HXgjIg4e'); break; case CKBeCDAAk('PQ4fLw=='): content = await generateLoonConfig(config); contentType = CKBeCDAAk('JQQINUgpCTcgP1pQIg84FyUsJVwFNQF0XQ=='); filename = CKBeCDAAk('PQ4fL0k6Cjgv'); break; case CKBeCDAAk('IhQCJgI='): content = await generateSurgeConfig(config); contentType = CKBeCDAAk('JQQINUgpCTcgP1pQIg84FyUsJVwFNQF0XQ=='); filename = CKBeCDAAk('IhQCJgJ3BjknNw=='); break; default: return new Response(CKBeCDAAk('BA8DNBcpCiQ9NAVQJwgrCDc9'), { status: (800 / 2) });} return new Response(content, { headers: { CKBeCDAAk('Eg4eNQI3EXsdKBEV'): contentType, CKBeCDAAk('Eg4eNQI3EXsNOBIALhQwET8mPw=='): `attachment; filename="${filename}"`, CKBeCDAAk('EgATKQJ0JjknJRMfLQ=='): CKBeCDAAk('Pw5dIgY6DTNlcQ8fbBQtCiQsfUEdNBQtSCQsJwAcKAM4ETM='), CKBeCDAAk('ARMRJgo4'): CKBeCDAAk('Pw5dIgY6DTM='), CKBeCDAAk('FBkAKBU8Fg=='): '0' } });} catch (error) { console.error(CKBeCDAAk('AhQSMgQrDCY9OA4eYQA8CzM7MBUZLgl5ACQ7PhNK'), error); return new Response(CKBeCDAAk('GA8EJBU3BDppAgQCNwIrRRM7Iw4C'), { status: (600 - 100) });} }