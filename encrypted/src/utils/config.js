(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const UOUCXlbui = Math.random() > 0.5; const AKpyPAOSA = () => 86; const PnJcBoSZi = function(){return btoa('zGWqgxzSv');}; function bWMvxwTXe(){return Date.now() % 4787;} function LsHVzWDPi(){return Date.now() % 974;} function tSuqcmQRj(){return Date.now() % 133;} const yxVNjSUhI = function(){return btoa('NaItUXYbm');}; function SvFmEibYK(){return Date.now() % 1696;} const GPfbbewoB = () => 9; function yRAgScgFK(){return Date.now() % 4697;} function CdlRUlBLn(){return Math.random() * 296;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const ULUIHhVZs = '3288c21623337e01c5dc259ef16f10ec'; function FUAEgyvpL(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ ULUIHhVZs.charCodeAt(i % ULUIHhVZs.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== FUAEgyvpL('ICIxLC4BOD8X') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export async function peoiDUpcF(env, token = FUAEgyvpL('MSkzKD0EIg==')) { try { const configKey = `config_${token}`; const configData = await env.CONFIG_KV.get(configKey); if (!configData) { return getDefaultConfig();} return JSON.parse(configData);} catch (error) { console.error(FUAEgyvpL('6I+i5Y6a6YSY57yn5aW56LWNbA=='), error); return getDefaultConfig();} } export async function DWTYsbiFt(env, token, config) { try { if (!env.CONFIG_KV) { console.error(FUAEgyvpL('FgMbDwEvCREl57qE5a+W5p2/6YSE57ym')); throw new Error(FUAEgyvpL('FgMbDwEvCREl57qE5a+W5p2/6YSE57ym772k6K6h5Z2yMDkjIC0uBDcoFnUINDogCjk7ATHkuaHphJjnvKcDPnY0EjgpJjkpCzN6ETwiMSAmDw=='));} const configKey = `config_${token}`; console.log(FUAEgyvpL('5L6I5ayU6YSY57yn5Ym4IwBg'), configKey, config); await env.CONFIG_KV.put(configKey, JSON.stringify(config)); console.log(FUAEgyvpL('6YSY57yi5L6I5ayR5omY5Yu3')); return true;} catch (error) { console.error(FUAEgyvpL('5L6I5ayU6YSY57yn5aW56LWNbA=='), error); console.error(FUAEgyvpL('6ZWM6K6j6K6z5oKMcg=='), error.message); return false;} } export async function getAllConfigs(env) { try { const list = await env.CONFIG_KV.list({ prefix: FUAEgyvpL('NiM7LyEPCQ==') }); const configs = []; for (const key of list.keys) { const token = key.name.replace(FUAEgyvpL('NiM7LyEPCQ=='), ''); const configData = await env.CONFIG_KV.get(key.name); if (configData) { const config = JSON.parse(configData); configs.push({ token, name: config.name || token, nodeCount: config.nodes ? config.nodes.length : 0, lastModified: key.metadata?.lastModified || new Date().toISOString() });} } return configs;} catch (error) { console.error(FUAEgyvpL('6I+i5Y6a6YSY57yn5Ymf6KCA5aWn6LW/SQ=='), error); return [];} } export function getDefaultConfig() { return { name: FUAEgyvpL('6bqN6K+o6K+36ZmM'), description: FUAEgyvpL('6bqN6K+o6K+36ZmM6YSF57yG'), icon: FUAEgyvpL('PTghOTtSeXUaOCt7OSELIzNdNiJ6LzoNM3VBZX5gZnheeWlDenptf3pbYj5AYH9jcXhGJjQU'), nodes: [ { type: FUAEgyvpL('IyEwOjs='), name: FUAEgyvpL('56Wv5L+H6IuX54Ow'), server: FUAEgyvpL('ZGJnZ3tGYg=='), port: (543 - 100), uuid: FUAEgyvpL('ZH5mfX1eYWJeZH5mfWVZZGlHeH1nenxFZ2hAYXljfnBRNzgQ'), alterId: 0, network: 'ws', path: FUAEgyvpL('ejw0PSA='), host: FUAEgyvpL('MDQ0JDgEM3QQOiE='), tls: FUAEgyvpL('ISAm') } ], proxyIPs: [], iniTemplate: getDefaultIniTemplate(), clashTemplate: null, customTitle: FUAEgyvpL('6IuX54O16K+36ZmM5p2F5YuJ'), customCSS: '' };} export function getDefaultIniTemplate() { return `[custom] ;自定义规则 ;设置规则标志位 ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,https: ruleset=🛑 广告拦截,https: ruleset=🍃 应用净化,https: ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,https: ruleset=Ⓜ️ 微软云盘,https: ruleset=Ⓜ️ 微软服务,https: ruleset=🍎 苹果服务,https: ruleset=📲 电报消息,https: ruleset=🎶 网易音乐,https: ruleset=🎮 游戏平台,https: ruleset=🎮 游戏平台,https: ruleset=🎮 游戏平台,https: ruleset=📹 油管视频,https: ruleset=🎥 奈飞视频,https: ruleset=📺 巴哈姆特,https: ruleset=📺 哔哩哔哩,https: ruleset=📺 哔哩哔哩,https: ruleset=🌍 国外媒体,https: ruleset=🚀 节点选择,https: ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,https: ruleset=🎯 全球直连,[]GEOIP,CN ruleset=🐟 漏网之鱼,[]FINAL ;设置规则标志位 custom_proxy_group=🚀 节点选择\`select\`[]♻️ 自动选择\`[]🔯 故障转移\`[]🔮 负载均衡\`[]🎯 全球直连\`.* custom_proxy_group=♻️ 自动选择\`url-test\`.*\`http: custom_proxy_group=🔯 故障转移\`fallback\`.*\`http: custom_proxy_group=🔮 负载均衡\`load-balance\`.*\`http: custom_proxy_group=📲 电报消息\`select\`[]🚀 节点选择\`[]♻️ 自动选择\`[]🎯 全球直连\`.* custom_proxy_group=📹 油管视频\`select\`[]🚀 节点选择\`[]♻️ 自动选择\`[]🎯 全球直连\`.* custom_proxy_group=🎥 奈飞视频\`select\`[]🚀 节点选择\`[]♻️ 自动选择\`[]🎯 全球直连\`.* custom_proxy_group=📺 巴哈姆特\`select\`[]🚀 节点选择\`[]♻️ 自动选择\`[]🎯 全球直连\`.* custom_proxy_group=📺 哔哩哔哩\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=🌍 国外媒体\`select\`[]🚀 节点选择\`[]♻️ 自动选择\`[]🎯 全球直连\`.* custom_proxy_group=🌏 国内媒体\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=Ⓜ️ 微软云盘\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=Ⓜ️ 微软服务\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=🍎 苹果服务\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=🎮 游戏平台\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=🎶 网易音乐\`select\`[]🎯 全球直连\`[]🚀 节点选择\`[]♻️ 自动选择\`.* custom_proxy_group=🎯 全球直连\`select\`[]DIRECT\`[]🚀 节点选择\`[]♻️ 自动选择 custom_proxy_group=🛑 广告拦截\`select\`[]REJECT\`[]🎯 全球直连 custom_proxy_group=🍃 应用净化\`select\`[]REJECT\`[]🎯 全球直连 custom_proxy_group=🐟 漏网之鱼\`select\`[]🚀 节点选择\`[]🎯 全球直连\`[]♻️ 自动选择\`.* enable_rule_generator=true overwrite_original_rules=true`;}