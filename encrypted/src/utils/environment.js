(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const MYdEmBIdX = Math.random() > 0.5; const tWUWwtyWy = () => 65; function VKRHYvBUD(){return Date.now() % 732;} function ICiXBmfgF(){return Date.now() % 9468;} const TZTeuIuuW = () => 39; function uivuVsqJI(){return Math.random() * 109;} const cdnPpbkhN = function(){return btoa('kGuIfAGiQ');}; const aCIGtBIfl = function(){return btoa('dSGvLbngf');}; function CJqfkXolK(){return Math.random() * 884;} function WHvvIAbpX(){return Date.now() % 5042;} function sYEhMgBzU(){return 'MqDJDEhvu'.length;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const LJqPtMalg = '39ac039ffeb5da665217464cc13f1d8e'; function EzQEuVZcV(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ LJqPtMalg.charCodeAt(i % LJqPtMalg.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== EzQEuVZcV('OSQVNRIkDwkD') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export function hHrfDLaVl(env) { const isPages = !!(env.CF_PAGES || env.CF_PAGES_BRANCH || env.DEPLOYMENT_TYPE === EzQEuVZcV('PCsWNQc=')); const isWorkers = !isPages; return { isPages, isWorkers, deploymentType: isPages ? EzQEuVZcV('PCsWNQc=') : EzQEuVZcV('OyUDOxE/Eg=='), branch: env.CF_PAGES_BRANCH || EzQEuVZcV('ISsYPg=='), commitSha: env.CF_PAGES_COMMIT_SHA || '', url: env.CF_PAGES_URL || '', environment: env.ENVIRONMENT || (isPages ? EzQEuVZcV('PCsWNQc=') : EzQEuVZcV('PDgeNAEuFQUIIg==')) };} export function rwyoDRzHf(env) { const envInfo = hHrfDLaVl(env); return { ...env, DEPLOYMENT_TYPE: envInfo.deploymentType, IS_PAGES: envInfo.isPages, IS_WORKERS: envInfo.isWorkers, CONFIG_KV: env.CONFIG_KV || env.KV_NAMESPACE || env.SUBSCRIPTION_KV, CF_PAGES: env.CF_PAGES || envInfo.isPages, CF_PAGES_BRANCH: env.CF_PAGES_BRANCH || EzQEuVZcV('ISsYPg=='), CF_PAGES_COMMIT_SHA: env.CF_PAGES_COMMIT_SHA || '', CF_PAGES_URL: env.CF_PAGES_URL || '', ENVIRONMENT: env.ENVIRONMENT || envInfo.environment, BUILD_TIME: new Date().toISOString(), DEBUG: env.DEBUG || env.ENVIRONMENT === EzQEuVZcV('KC8HNRgiEQECIj4=') };} export function VaXQZSoop(env) { const envInfo = hHrfDLaVl(env); const baseConfig = { cors: { enabled: true, origins: ['*'], methods: [EzQEuVZcV('Cw8l'), EzQEuVZcV('HAUiBA=='), EzQEuVZcV('HB8l'), EzQEuVZcV('CA89FSAI'), EzQEuVZcV('AxolGTsDMg==')], headers: [EzQEuVZcV('DyUfJBEjFUEzNToU'), EzQEuVZcV('DT8FOBs/CBYGOCMePg==')] }, cache: { enabled: true, ttl: (600 / 2) }, logging: { level: env.DEBUG ? EzQEuVZcV('KC8TJRM=') : EzQEuVZcV('JSQXPw=='), enabled: true } }; if (envInfo.isPages) { return { ...baseConfig, staticAssets: { enabled: true, path: EzQEuVZcV('YzkFMQAkAg==') }, functions: { enabled: true, path: EzQEuVZcV('YywEPhc5CAMJPw==') } };} else { return { ...baseConfig, workers: { enabled: true, cpu_limit: Math.floor(50.5) } };} } export function logEnvironmentInfo(env) { const envInfo = hHrfDLaVl(env); const config = VaXQZSoop(env); console.log(EzQEuVZcV('8KyNh1Hnj7/lo7fkvqzmgI5W'), { deployment: envInfo.deploymentType, environment: envInfo.environment, branch: envInfo.branch, hasKV: !!(env.CONFIG_KV || env.KV_NAMESPACE), debug: !!env.DEBUG, timestamp: new Date().toISOString() }); if (envInfo.isPages) { console.log(EzQEuVZcV('8KySjlEAFSoEH0fnj6Plo4lL'), { url: envInfo.url, commit: envInfo.commitSha?.substring(0, 8) || EzQEuVZcV('OSQaPhs6Dw==') });} if (config.logging.level === EzQEuVZcV('KC8TJRM=')) { console.log(EzQEuVZcV('8KyVrVHosZPorqHmqazlva7ltp7lkYjnlaQ=')); console.log(EzQEuVZcV('8KySgVHlr5zmlIDnj6Llo6LljrTphqh2'), Object.keys(env));} } export function omnnrXzWn(env) { const issues = []; const warnings = []; if (!env.CONFIG_KV && !env.KV_NAMESPACE) { issues.push(EzQEuVZcV('57225bGbURsibeWsueWDhOmEque8ompZEzsDJyUgEwEncOaJom0qOjgCCzwVJx0gLyJl'));} const envInfo = hHrfDLaVl(env); if (envInfo.isPages) { if (!env.CF_PAGES_URL && env.ENVIRONMENT === EzQEuVZcV('PDgeNAEuFQUIIg==')) { warnings.push(EzQEuVZcV('55WT5Lut54+e5aOT5bqO6K+j6K+f57yCRw8MLgA1CiQ/OBkYPQ=='));} } if (env.DEBUG && env.ENVIRONMENT === EzQEuVZcV('PDgeNAEuFQUIIg==')) { warnings.push(EzQEuVZcV('55WT5Lut54+e5aOT5Lm55bq36K+P5ZGD55WP6LGP6K6f5qmQ5b2f'));} return { valid: issues.length === 0, issues, warnings, environment: envInfo };} export function getRuntimeInfo(request, env) { const envInfo = hHrfDLaVl(env); const url = new URL(request.url); return { environment: envInfo, request: { method: request.method, url: request.url, host: url.host, pathname: url.pathname, userAgent: request.headers.get(EzQEuVZcV('GTkUIlkMBgkJOA==')), cf: request.cf ? { country: request.cf.country, city: request.cf.city, timezone: request.cf.timezone } : null }, timestamp: new Date().toISOString(), timezone: Intl.DateTimeFormat().resolvedOptions().timeZone, runtime: envInfo.isPages ? EzQEuVZcV('HCsWNQdtJxkJLz4YPxo+') : EzQEuVZcV('GyUDOxE/Ekw1OSQFORko') };}