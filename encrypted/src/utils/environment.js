(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const ybjcjXVIT = Math.random() > 0.5; function YRmJugAMg(){return Math.random() * 827;} function rNQkFCLBQ(){return 'adGcvPsSi'.length;} const BTEIlOhtC = function(){return btoa('HXnUBzlSM');}; function ziflaBTNX(){return Date.now() % 5491;} const JXkEOFhsY = () => 46; function XYpfVUXdd(){return Math.random() * 550;} function lAoPMaOar(){return Math.random() * 798;} const aVfKOKXNj = () => 24; const qIbvePZdW = () => 44; const ewFECuOdt = () => 36; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const JhkCebodP = 'aec7e915e28c81abba653fa50e19820e'; function RskjBNnIZ(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ JhkCebodP.charCodeAt(i % JhkCebodP.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== RskjBNnIZ('PwYPJgMLAQE0') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export function fVNvVBxaX(env) { const isPages = !!(env.CF_PAGES || env.CF_PAGES_BRANCH || env.DEPLOYMENT_TYPE === RskjBNnIZ('OgkMJhY=')); const isWorkers = !isPages; return { isPages, isWorkers, deploymentType: isPages ? RskjBNnIZ('OgkMJhY=') : RskjBNnIZ('PQcZKAAQHA=='), branch: env.CF_PAGES_BRANCH || RskjBNnIZ('JwkCLQ=='), commitSha: env.CF_PAGES_COMMIT_SHA || '', url: env.CF_PAGES_URL || '', environment: env.ENVIRONMENT || (isPages ? RskjBNnIZ('OgkMJhY=') : RskjBNnIZ('OhoEJxABGw0/JA==')) };} export function DxfFwQxBm(env) { const envInfo = fVNvVBxaX(env); return { ...env, DEPLOYMENT_TYPE: envInfo.deploymentType, IS_PAGES: envInfo.isPages, IS_WORKERS: envInfo.isWorkers, CONFIG_KV: env.CONFIG_KV || env.KV_NAMESPACE || env.SUBSCRIPTION_KV, CF_PAGES: env.CF_PAGES || envInfo.isPages, CF_PAGES_BRANCH: env.CF_PAGES_BRANCH || RskjBNnIZ('JwkCLQ=='), CF_PAGES_COMMIT_SHA: env.CF_PAGES_COMMIT_SHA || '', CF_PAGES_URL: env.CF_PAGES_URL || '', ENVIRONMENT: env.ENVIRONMENT || envInfo.environment, BUILD_TIME: new Date().toISOString(), DEBUG: env.DEBUG || env.ENVIRONMENT === RskjBNnIZ('Lg0dJgkNHwk1JBw=') };} export function EdyaLTFCL(env) { const envInfo = fVNvVBxaX(env); const baseConfig = { cors: { enabled: true, origins: ['*'], methods: [RskjBNnIZ('DS0/'), RskjBNnIZ('Gic4Fw=='), RskjBNnIZ('Gj0/'), RskjBNnIZ('Di0nBjEn'), RskjBNnIZ('BTg/CiosPA==')], headers: [RskjBNnIZ('CQcFNwAMG0kEMxgO'), RskjBNnIZ('Cx0fKwoQBh4xPgEELQ==')] }, cache: { enabled: true, ttl: (400 - 100) }, logging: { level: env.DEBUG ? RskjBNnIZ('Lg0JNgI=') : RskjBNnIZ('IwYNLA=='), enabled: true } }; if (envInfo.isPages) { return { ...baseConfig, staticAssets: { enabled: true, path: RskjBNnIZ('ZRsfIhELDA==') }, functions: { enabled: true, path: RskjBNnIZ('ZQ4eLQYWBgs+OQ==') } };} else { return { ...baseConfig, workers: { enabled: true, cpu_limit: (100 - 50) } };} } export function logEnvironmentInfo(env) { const envInfo = fVNvVBxaX(env); const config = EdyaLTFCL(env); console.log(RskjBNnIZ('8K2tpUvnj6zlo6bkvoPmgIBe'), { deployment: envInfo.deploymentType, environment: envInfo.environment, branch: envInfo.branch, hasKV: !!(env.CONFIG_KV || env.KV_NAMESPACE), debug: !!env.DEBUG, timestamp: new Date().toISOString() }); if (envInfo.isPages) { console.log(RskjBNnIZ('8K2yrEsTBAUKF3Dnj6Xlo6tR'), { url: envInfo.url, commit: envInfo.commitSha?.substring(0, 8) || RskjBNnIZ('PwYALQoVAQ==') });} if (config.logging.level === RskjBNnIZ('Lg0JNgI=')) { console.log(RskjBNnIZ('8K21j0vosYDorrDmqYPlvaDltpblkb/nlaI=')); console.log(RskjBNnIZ('8K2yo0vlr4/mlJHnj43lo6zljrzphp9w'), Object.keys(env));} } export function BwPhzSJEu(env) { const issues = []; const warnings = []; if (!env.CONFIG_KV && !env.KV_NAMESPACE) { issues.push(RskjBNnIZ('572w5bG5SwgzQuWst+WDjOmEnee8pEhDACosKS0XFSM9Y+aJs0IkMg8EKSYGNjIuJxVj'));} const envInfo = fVNvVBxaX(env); if (envInfo.isPages) { if (!env.CF_PAGES_URL && env.ENVIRONMENT === RskjBNnIZ('OhoEJxABGw0/JA==')) { warnings.push(RskjBNnIZ('55WV5LuP54+E5aOA5bqf6K+M6K+R57yKcAkuNBMkJSo3Dx86Jw=='));} } if (env.DEBUG && env.ENVIRONMENT === RskjBNnIZ('OhoEJxABGw0/JA==')) { warnings.push(RskjBNnIZ('55WV5LuP54+E5aOA5Lmo5bqY6K+B5ZGL55W46LGJ6K695qmK5b2M'));} return { valid: issues.length === 0, issues, warnings, environment: envInfo };} export function getRuntimeInfo(request, env) { const envInfo = fVNvVBxaX(env); const url = new URL(request.url); return { environment: envInfo, request: { method: request.method, url: request.url, host: url.host, pathname: url.pathname, userAgent: request.headers.get(RskjBNnIZ('HxsOMUgjCAE+Pg==')), cf: request.cf ? { country: request.cf.country, city: request.cf.city, timezone: request.cf.timezone } : null }, timestamp: new Date().toISOString(), timezone: Intl.DateTimeFormat().resolvedOptions().timeZone, runtime: envInfo.isPages ? RskjBNnIZ('GgkMJhZCKRE+KRwCLAsR') : RskjBNnIZ('HQcZKAAQHEQCPwYfKggH') };}