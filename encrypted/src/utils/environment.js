(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const LfFWrNgRg = Math.random() > 0.5; const MDhXsjZJb = () => 24; const CNoqwgBwk = function(){return btoa('VlwSoDKSO');}; function iyGCLrEUV(){return Math.random() * 733;} function opsoyznFa(){return Math.random() * 326;} function OQMFtmkyz(){return Date.now() % 8494;} const HCVFJUgKb = function(){return btoa('miKoCjKEu');}; function SWHTqqvUe(){return Math.random() * 342;} const rmysmSwGl = () => 14; function QPngdkpux(){return 'sCoGXmefS'.length;} const mbNRxDawT = () => 69; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const yljaysmNC = '2d73edba58e7b996ecf7fee35352c240'; function bJnTfjdya(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ yljaysmNC.charCodeAt(i % yljaysmNC.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== bJnTfjdya('DAIOBB8aAysn') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export function WSkBXiTIV(env) { const isPages = !!(env.CF_PAGES || env.CF_PAGES_BRANCH || env.DEPLOYMENT_TYPE === bJnTfjdya('CQ0NBAo=')); const isWorkers = !isPages; return { isPages, isWorkers, deploymentType: isPages ? bJnTfjdya('CQ0NBAo=') : bJnTfjdya('DgMYChwBHg=='), branch: env.CF_PAGES_BRANCH || bJnTfjdya('FA0DDw=='), commitSha: env.CF_PAGES_COMMIT_SHA || '', url: env.CF_PAGES_URL || '', environment: env.ENVIRONMENT || (isPages ? bJnTfjdya('CQ0NBAo=') : bJnTfjdya('CR4FBQwQGScsFw==')) };} export function FgFdbQOdW(env) { const envInfo = WSkBXiTIV(env); return { ...env, DEPLOYMENT_TYPE: envInfo.deploymentType, IS_PAGES: envInfo.isPages, IS_WORKERS: envInfo.isWorkers, CONFIG_KV: env.CONFIG_KV || env.KV_NAMESPACE || env.SUBSCRIPTION_KV, CF_PAGES: env.CF_PAGES || envInfo.isPages, CF_PAGES_BRANCH: env.CF_PAGES_BRANCH || bJnTfjdya('FA0DDw=='), CF_PAGES_COMMIT_SHA: env.CF_PAGES_COMMIT_SHA || '', CF_PAGES_URL: env.CF_PAGES_URL || '', ENVIRONMENT: env.ENVIRONMENT || envInfo.environment, BUILD_TIME: new Date().toISOString(), DEBUG: env.DEBUG || env.ENVIRONMENT === bJnTfjdya('HQkcBBUcHSMmFxg=') };} export function EjhBToPRf(env) { const envInfo = WSkBXiTIV(env); const baseConfig = { cors: { enabled: true, origins: ['*'], methods: [bJnTfjdya('Pik+'), bJnTfjdya('KSM5NQ=='), bJnTfjdya('KTk+'), bJnTfjdya('PSkmJC02'), bJnTfjdya('Njw+KDY9Pg==')], headers: [bJnTfjdya('OgMEFRwdGWMXABwP'), bJnTfjdya('OBkeCRYBBDQiDQUFDw==')] }, cache: { enabled: true, ttl: (400 - 100) }, logging: { level: env.DEBUG ? bJnTfjdya('HQkIFB4=') : bJnTfjdya('EAIMDg=='), enabled: true } }; if (envInfo.isPages) { return { ...baseConfig, staticAssets: { enabled: true, path: bJnTfjdya('Vh8eAA0aDg==') }, functions: { enabled: true, path: bJnTfjdya('VgofDxoHBCEtCg==') } };} else { return { ...baseConfig, workers: { enabled: true, cpu_limit: Math.floor(50.5) } };} } export function logEnvironmentInfo(env) { const envInfo = WSkBXiTIV(env); const config = EjhBToPRf(env); console.log(bJnTfjdya('8KGdoUrnj47lo7rkvpLmgIJ0'), { deployment: envInfo.deploymentType, environment: envInfo.environment, branch: envInfo.branch, hasKV: !!(env.CONFIG_KV || env.KV_NAMESPACE), debug: !!env.DEBUG, timestamp: new Date().toISOString() }); if (envInfo.isPages) { console.log(bJnTfjdya('8KGCqEoxGBQIPWPnj5blo69Q'), { url: envInfo.url, commit: envInfo.commitSha?.substring(0, 8) || bJnTfjdya('DAIBDxYEAw==') });} if (config.logging.level === bJnTfjdya('HQkIFB4=')) { console.log(bJnTfjdya('8KGFi0rosaLorqzmqZLlvaLltrzlkaznlZE=')); console.log(bJnTfjdya('8KGCp0rlr63mlI3nj5zlo67ljpbphoxD'), Object.keys(env));} } export function GiNzlcMWN(env) { const issues = []; const warnings = []; if (!env.CONFIG_KV && !env.KV_NAMESPACE) { issues.push(bJnTfjdya('572D5bG9SiovU+WsteWDpumEjue8l0xCIjY9KwcEJic8QeaJr1MmGBw3LSckKiMsDQZQ'));} const envInfo = WSkBXiTIV(env); if (envInfo.isPages) { if (!env.CF_PAGES_URL && env.ENVIRONMENT === bJnTfjdya('CR4FBQwQGScsFw==')) { warnings.push(bJnTfjdya('55Wm5LuL54+F5aOi5bqD6K+d6K+T57ygYzoqNTE4NCgdHCw+Jg=='));} } if (env.DEBUG && env.ENVIRONMENT === bJnTfjdya('CR4FBQwQGScsFw==')) { warnings.push(bJnTfjdya('55Wm5LuL54+F5aOi5Lm05bqJ6K+D5ZGh55Wr6LG66K655qmL5b2u'));} return { valid: issues.length === 0, issues, warnings, environment: envInfo };} export function getRuntimeInfo(request, env) { const envInfo = WSkBXiTIV(env); const url = new URL(request.url); return { environment: envInfo, request: { method: request.method, url: request.url, host: url.host, pathname: url.pathname, userAgent: request.headers.get(bJnTfjdya('LB8PE1QyCistDQ==')), cf: request.cf ? { country: request.cf.country, city: request.cf.city, timezone: request.cf.timezone } : null }, timestamp: new Date().toISOString(), timezone: Intl.DateTimeFormat().resolvedOptions().timeZone, runtime: envInfo.isPages ? bJnTfjdya('KQ0NBApTKzstGhgDDhcA') : bJnTfjdya('LgMYChwBHm4RDAIeCBQW') };}