(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const YNUTFxGSk = Math.random() > 0.5; function wcFCMfjuN(){return Math.random() * 439;} const hBfJEMlkF = function(){return btoa('syEUVFHAU');}; function FLqlLrwSS(){return Math.random() * 681;} function KmhoEarNv(){return 'TGWAiLKBR'.length;} const xMiICucqZ = function(){return btoa('MuRxPKYgy');}; function HCpHOQhNJ(){return Date.now() % 1802;} function oiWbopiTq(){return 'OUXHSoHDM'.length;} const WvAcbxhTa = () => 76; function mpqjcizel(){return 'tLtGVcDBH'.length;} const zhrjGQuuk = () => 91; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const dRGMnGVqo = '19cb64c876f95369253d0df69a8e4319'; function RnUiJhBrC(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ dRGMnGVqo.charCodeAt(i % dRGMnGVqo.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== RnUiJhBrC('ETwjKAguOBQL') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export function tHBeAvThi(env) { const isPages = !!(env.CF_PAGES || env.CF_PAGES_BRANCH || env.DEPLOYMENT_TYPE === RnUiJhBrC('FDMgKB0=')); const isWorkers = !isPages; return { isPages, isWorkers, deploymentType: isPages ? RnUiJhBrC('FDMgKB0=') : RnUiJhBrC('Ez01Jgs1JQ=='), branch: env.CF_PAGES_BRANCH || RnUiJhBrC('CTMuIw=='), commitSha: env.CF_PAGES_COMMIT_SHA || '', url: env.CF_PAGES_URL || '', environment: env.ENVIRONMENT || (isPages ? RnUiJhBrC('FDMgKB0=') : RnUiJhBrC('FCAoKRskIhgACg==')) };} export function vAgayriYW(env) { const envInfo = tHBeAvThi(env); return { ...env, DEPLOYMENT_TYPE: envInfo.deploymentType, IS_PAGES: envInfo.isPages, IS_WORKERS: envInfo.isWorkers, CONFIG_KV: env.CONFIG_KV || env.KV_NAMESPACE || env.SUBSCRIPTION_KV, CF_PAGES: env.CF_PAGES || envInfo.isPages, CF_PAGES_BRANCH: env.CF_PAGES_BRANCH || RnUiJhBrC('CTMuIw=='), CF_PAGES_COMMIT_SHA: env.CF_PAGES_COMMIT_SHA || '', CF_PAGES_URL: env.CF_PAGES_URL || '', ENVIRONMENT: env.ENVIRONMENT || envInfo.environment, BUILD_TIME: new Date().toISOString(), DEBUG: env.DEBUG || env.ENVIRONMENT === RnUiJhBrC('ADcxKAIoJhwKCiY=') };} export function EagZjnpIj(env) { const envInfo = tHBeAvThi(env); const baseConfig = { cors: { enabled: true, origins: ['*'], methods: [RnUiJhBrC('IxcT'), RnUiJhBrC('NB0UGQ=='), RnUiJhBrC('NAcT'), RnUiJhBrC('IBcLCDoC'), RnUiJhBrC('KwITBCEJBQ==')], headers: [RnUiJhBrC('Jz0pOQspIlw7HSIi'), RnUiJhBrC('JSczJQE1PwsOEDsoIw==')] }, cache: { enabled: true, ttl: (400 - 100) }, logging: { level: env.DEBUG ? RnUiJhBrC('ADclOAk=') : RnUiJhBrC('DTwhIg=='), enabled: true } }; if (envInfo.isPages) { return { ...baseConfig, staticAssets: { enabled: true, path: RnUiJhBrC('SyEzLBouNQ==') }, functions: { enabled: true, path: RnUiJhBrC('SzQyIw0zPx4BFw==') } };} else { return { ...baseConfig, workers: { enabled: true, cpu_limit: (100 - 50) } };} } export function logEnvironmentInfo(env) { const envInfo = tHBeAvThi(env); const config = EagZjnpIj(env); console.log(RnUiJhBrC('8KaNn2fnj6Llo63kvqbmgLlL'), { deployment: envInfo.deploymentType, environment: envInfo.environment, branch: envInfo.branch, hasKV: !!(env.CONFIG_KV || env.KV_NAMESPACE), debug: !!env.DEBUG, timestamp: new Date().toISOString() }); if (envInfo.isPages) { console.log(RnUiJhBrC('8KaSlmcdDyAzAk/nj4vlo5F9'), { url: envInfo.url, commit: envInfo.commitSha?.substring(0, 8) || RnUiJhBrC('ETwsIwEwOA==') });} if (config.logging.level === RnUiJhBrC('ADclOAk=')) { console.log(RnUiJhBrC('8KaVtWfosY7orrvmqablvZnltoPlkYDnlYw=')); console.log(RnUiJhBrC('8KaSmWflr4HmlJrnj6jlo5XljqnphqBe'), Object.keys(env));} } export function AbpqgDjaK(env) { const issues = []; const warnings = []; if (!env.CONFIG_KV && !env.KV_NAMESPACE) { issues.push(RnUiJhBrC('572e5bGDZwY4Z+WsjuWDmemEoue8inJvDiEJEDgoOxkRbeaJuGcdJzAqEwoIPRcXMipN'));} const envInfo = tHBeAvThi(env); if (envInfo.isPages) { if (!env.CF_PAGES_URL && env.ENVIRONMENT === RnUiJhBrC('FCAoKRskIhgACg==')) { warnings.push(RnUiJhBrC('55W75Lu154+o5aOO5bqU6K+p6K+o57yfTycUGB0vABMiMDEACw=='));} } if (env.DEBUG && env.ENVIRONMENT === RnUiJhBrC('FCAoKRskIhgACg==')) { warnings.push(RnUiJhBrC('55W75Lu154+o5aOO5Lmj5bq96K+45ZGe55WH6LGn6K6H5qmm5b2C'));} return { valid: issues.length === 0, issues, warnings, environment: envInfo };} export function getRuntimeInfo(request, env) { const envInfo = tHBeAvThi(env); const url = new URL(request.url); return { environment: envInfo, request: { method: request.method, url: request.url, host: url.host, pathname: url.pathname, userAgent: request.headers.get(RnUiJhBrC('MSEiP0MGMRQBEA==')), cf: request.cf ? { country: request.cf.country, city: request.cf.city, timezone: request.cf.timezone } : null }, timestamp: new Date().toISOString(), timezone: Intl.DateTimeFormat().resolvedOptions().timeZone, runtime: envInfo.isPages ? RnUiJhBrC('NDMgKB1nEAQBByYuIgA0') : RnUiJhBrC('Mz01Jgs1JVE9ETwzJAMi') };}