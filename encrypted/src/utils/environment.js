(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const pnsrqOawP = Math.random() > 0.5; const JAUsvEtzt = function(){return btoa('hGvFjuPPd');}; function IsXqVRbcF(){return Date.now() % 9171;} const uNAgzKJVp = () => 40; function bxDhPpQfN(){return 'BfTMJKVHz'.length;} const SeWShrzzI = () => 78; function kRsnoWbzC(){return Math.random() * 561;} function WtywjnDPD(){return Date.now() % 801;} function vldCjcOsW(){return 'KJnqOeRxM'.length;} const YjGbsIMHU = function(){return btoa('oSgmURxOq');}; const IDKVlXgxp = () => 5; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const JanuojfKZ = 'e53fc572aa25c4f98e5a3b5fd327cca7'; function WAZDejiBH(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ JanuojfKZ.charCodeAt(i % JanuojfKZ.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== WAZDejiBH('Pw8KEAkDCC4+') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); export function quHOfTIcL(env) { const isPages = !!(env.CF_PAGES || env.CF_PAGES_BRANCH || env.DEPLOYMENT_TYPE === WAZDejiBH('OgAJEBw=')); const isWorkers = !isPages; return { isPages, isWorkers, deploymentType: isPages ? WAZDejiBH('OgAJEBw=') : WAZDejiBH('PQ4cHgoYFQ=='), branch: env.CF_PAGES_BRANCH || WAZDejiBH('JwAHGw=='), commitSha: env.CF_PAGES_COMMIT_SHA || '', url: env.CF_PAGES_URL || '', environment: env.ENVIRONMENT || (isPages ? WAZDejiBH('OgAJEBw=') : WAZDejiBH('OhMBERoJEiI1JA==')) };} export function mRjeeXydT(env) { const envInfo = quHOfTIcL(env); return { ...env, DEPLOYMENT_TYPE: envInfo.deploymentType, IS_PAGES: envInfo.isPages, IS_WORKERS: envInfo.isWorkers, CONFIG_KV: env.CONFIG_KV || env.KV_NAMESPACE || env.SUBSCRIPTION_KV, CF_PAGES: env.CF_PAGES || envInfo.isPages, CF_PAGES_BRANCH: env.CF_PAGES_BRANCH || WAZDejiBH('JwAHGw=='), CF_PAGES_COMMIT_SHA: env.CF_PAGES_COMMIT_SHA || '', CF_PAGES_URL: env.CF_PAGES_URL || '', ENVIRONMENT: env.ENVIRONMENT || envInfo.environment, BUILD_TIME: new Date().toISOString(), DEBUG: env.DEBUG || env.ENVIRONMENT === WAZDejiBH('LgQYEAMFFiY/JBU=') };} export function JlfgEuWrB(env) { const envInfo = quHOfTIcL(env); const baseConfig = { cors: { enabled: true, origins: ['*'], methods: [WAZDejiBH('DSQ6'), WAZDejiBH('Gi49IQ=='), WAZDejiBH('GjQ6'), WAZDejiBH('DiQiMDsv'), WAZDejiBH('BTE6PCAkNQ==')], headers: [WAZDejiBH('CQ4AAQoEEmYOMxEL'), WAZDejiBH('CxQaHQAYDzE7PggBGw==')] }, cache: { enabled: true, ttl: (350 - 50) }, logging: { level: env.DEBUG ? WAZDejiBH('LgQMAAg=') : WAZDejiBH('Iw8IGg=='), enabled: true } }; if (envInfo.isPages) { return { ...baseConfig, staticAssets: { enabled: true, path: WAZDejiBH('ZRIaFBsDBQ==') }, functions: { enabled: true, path: WAZDejiBH('ZQcbGwweDyQ0OQ==') } };} else { return { ...baseConfig, workers: { enabled: true, cpu_limit: (100 / 2) } };} } export function logEnvironmentInfo(env) { const envInfo = quHOfTIcL(env); const config = JlfgEuWrB(env); console.log(WAZDejiBH('8K2trE7nj5rlo6zkvovmgIlx'), { deployment: envInfo.deploymentType, environment: envInfo.environment, branch: envInfo.branch, hasKV: !!(env.CONFIG_KV || env.KV_NAMESPACE), debug: !!env.DEBUG, timestamp: new Date().toISOString() }); if (envInfo.isPages) { console.log(WAZDejiBH('8K2ypU4lDg0DOHrnj6Xlo6JU'), { url: envInfo.url, commit: envInfo.commitSha?.substring(0, 8) || WAZDejiBH('Pw8FGwAdCA==') });} if (config.logging.level === WAZDejiBH('LgQMAAg=')) { console.log(WAZDejiBH('8K21hk7osbborrrmqYvlvanltrnlkbXnlaI=')); console.log(WAZDejiBH('8K2yqk7lr7nmlJvnj4Xlo6XljpPphpVw'), Object.keys(env));} } export function IhhKisYVu(env) { const issues = []; const warnings = []; if (!env.CONFIG_KV && !env.KV_NAMESPACE) { issues.push(WAZDejiBH('572w5bGwTj45SuWsvuWDo+mEl+e8pEFGNiAkIAIdFSo4VeaJuUotHQUEICMwPDonCB9j'));} const envInfo = quHOfTIcL(env); if (envInfo.isPages) { if (!env.CF_PAGES_URL && env.ENVIRONMENT === WAZDejiBH('OhMBERoJEiI1JA==')) { warnings.push(WAZDejiBH('55WV5LuG54+B5aO25bqV6K+E6K+Y57ylegknMSUuLSMYBR8zIg=='));} } if (env.DEBUG && env.ENVIRONMENT === WAZDejiBH('OhMBERoJEiI1JA==')) { warnings.push(WAZDejiBH('55WV5LuG54+B5aO25Lmi5bqQ6K+I5ZGk55Wy6LGJ6K605qmP5b26'));} return { valid: issues.length === 0, issues, warnings, environment: envInfo };} export function getRuntimeInfo(request, env) { const envInfo = quHOfTIcL(env); const url = new URL(request.url); return { environment: envInfo, request: { method: request.method, url: request.url, host: url.host, pathname: url.pathname, userAgent: request.headers.get(WAZDejiBH('HxILB0IrAS40Pg==')), cf: request.cf ? { country: request.cf.country, city: request.cf.city, timezone: request.cf.timezone } : null }, timestamp: new Date().toISOString(), timezone: Intl.DateTimeFormat().resolvedOptions().timeZone, runtime: envInfo.isPages ? WAZDejiBH('GgAJEBxKID40KRUHGgEZ') : WAZDejiBH('HQ4cHgoYFWsIPw8aHAIP') };}