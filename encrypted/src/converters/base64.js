(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const CJQQmNFGG = Math.random() > 0.5; function dYpwDoWqG(){return Math.random() * 838;} const XTEXORvaa = function(){return btoa('pkBmHGjrd');}; const sDXIwcXyl = function(){return btoa('dvnGAnCfR');}; const sNVfgDWWc = function(){return btoa('SeSxQZaMG');}; const SskQpHimw = function(){return btoa('FZWeMFsWz');}; function ZSpVtGhOZ(){return 'nTAmqwfHN'.length;} function rCPUPJHig(){return Date.now() % 9101;} function SDWeBhPyL(){return Date.now() % 972;} function WJskJejbz(){return 'JgVxeQZEW'.length;} const ndjLlYDEN = function(){return btoa('ACgmraGVv');}; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const nNkTfDxHz = '5e0140ea3f7e5ec5ed73fc93fccd11be'; function quWTVrOkN(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ nNkTfDxHz.charCodeAt(i % nNkTfDxHz.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== quWTVrOkN('GyAPMQAtFi0e') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); export async function ZvKcVFPre(config) { const { nodes, proxyIPs } = config; const proxies = []; for (const node of nodes) { const serverIP = getProxyIP(node.server, proxyIPs) || node.server; let proxyUrl; switch (node.type.toLowerCase()) { case quWTVrOkN('GCMOJxU='): proxyUrl = generateVmessUrl(node, serverIP); break; case quWTVrOkN('GCIOJxU='): proxyUrl = generateVlessUrl(node, serverIP); break; case quWTVrOkN('GjwEPgcq'): proxyUrl = generateTrojanUrl(node, serverIP); break; case 'ss': case quWTVrOkN('HSYKMAkzCycZBT0='): proxyUrl = generateShadowsocksUrl(node, serverIP); break; default: continue;} if (proxyUrl) { proxies.push(proxyUrl);} } return btoa(proxies.join('\n'));} function getProxyIP(originalIP, proxyIPs) { if (!proxyIPs || proxyIPs.length === 0) return null; const randomIndex = Math.floor(Math.random() * proxyIPs.length); return proxyIPs[randomIndex];} function generateVmessUrl(node, serverIP) { const vmessConfig = { v: '2', ps: node.name || node.server, add: serverIP, port: node.port, id: node.uuid, aid: node.alterId || 0, net: node.network || quWTVrOkN('Gi0b'), type: node.type || quWTVrOkN('ACEFMQ=='), host: node.host || '', path: node.path || '', tls: node.tls || '', sni: node.sni || '' }; return quWTVrOkN('GCMOJxV+V2c=') + btoa(JSON.stringify(vmessConfig));} function generateVlessUrl(node, serverIP) { const params = new URLSearchParams(); params.set(quWTVrOkN('GjcbMQ=='), node.network || quWTVrOkN('Gi0b')); params.set(quWTVrOkN('HSsIIRQtDDE='), node.tls || quWTVrOkN('ACEFMQ==')); if (node.host) params.set(quWTVrOkN('BiEYIA=='), node.host); if (node.path) params.set(quWTVrOkN('Hi8fPA=='), node.path); if (node.sni) params.set(quWTVrOkN('HSAC'), node.sni); return `vless: } function generateTrojanUrl(node, serverIP) { const params = new URLSearchParams(); params.set(quWTVrOkN('GjcbMQ=='), node.network || quWTVrOkN('Gi0b')); if (node.host) params.set(quWTVrOkN('BiEYIA=='), node.host); if (node.path) params.set(quWTVrOkN('Hi8fPA=='), node.path); if (node.sni) params.set(quWTVrOkN('HSAC'), node.sni); return `trojan: } function generateShadowsocksUrl(node, serverIP) { const auth = btoa(`${node.method}:${node.password}`); return `ss: }