(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const AwXbOfAda = Math.random() > 0.5; const tAJgAOtYH = () => 96; const ezDJYOovT = () => 46; const DoImkIAxy = function(){return btoa('DynbQAzwu');}; function rLBBedtSD(){return Math.random() * 452;} function biWUuWhYH(){return Math.random() * 477;} const oDqwQJJgm = function(){return btoa('fluUPyXTa');}; function hUaCPvMxA(){return 'PNsLPiRHl'.length;} const AbulGBNMp = function(){return btoa('XGkSaQEFD');}; const BWrRXqQEB = () => 19; const WlVaDssaQ = function(){return btoa('hFGaHvfBL');}; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const gCgmDaGCf = '8e0958c9c199b669a1dea9d342c71b31'; function PhSrJyybA(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ gCgmDaGCf.charCodeAt(i % gCgmDaGCf.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== PhSrJyybA('Ei0DCCIIKSYC') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); export async function generateLoonConfig(config) { const { nodes, proxyIPs } = config; const proxies = []; for (const node of nodes) { const serverIP = getProxyIP(node.server, proxyIPs) || node.server; const name = node.name || `${node.server}:${node.port}`; let proxy; switch (node.type.toLowerCase()) { case PhSrJyybA('ES4CHjc='): proxy = generateVmessProxy(node, serverIP, name); break; case PhSrJyybA('ES8CHjc='): proxy = generateVlessProxy(node, serverIP, name); break; case PhSrJyybA('EzEIByUP'): proxy = generateTrojanProxy(node, serverIP, name); break; case 'ss': case PhSrJyybA('FCsGCSsWNCwFDDA='): proxy = generateShadowsocksProxy(node, serverIP, name); break; default: continue;} if (proxy) { proxies.push(proxy);} } const loonConfig = `[General] ipv6 = false dns-server = (446 / 2).5.5.5, (219 - 100).(79 - 50).(79 - 50).(58 / 2) allow-wifi-access = false wifi-access-http-port = (14444 / 2) wifi-access-socks5-port = (7321 - 100) proxy-test-url = http: test-timeout = 3 [Host] [Proxy] ${proxies.join('\n')} [Remote Proxy] [Proxy Group] PROXY = select,${proxies.map(p => p.split(PhSrJyybA('R35H'))[0]).join(',')} AUTO = url-test,${proxies.map(p => p.split(PhSrJyybA('R35H'))[0]).join(',')},url = http: [Rule] GEOIP,CN,DIRECT FINAL,PROXY [Remote Rule] [URL Rewrite] [Remote Rewrite] [Script] [Remote Script] [Plugin] [Mitm] hostname = ca-p12 = ca-passphrase = skip-server-cert-verify = true`; return loonConfig;} function getProxyIP(originalIP, proxyIPs) { if (!proxyIPs || proxyIPs.length === 0) return null; const randomIndex = Math.floor(Math.random() * proxyIPs.length); const selectedProxy = proxyIPs[randomIndex]; if (selectedProxy.includes('#')) { const [ipPart] = selectedProxy.split('#'); if (ipPart.includes(':')) { const [ip] = ipPart.split(':'); return ip.trim();} else { return ipPart.trim();} } else if (selectedProxy.includes(':')) { const [ip] = selectedProxy.split(':'); return ip.trim();} else { return selectedProxy.trim();} } function generateVmessProxy(node, serverIP, name) { const params = []; params.push(`transport=${node.network || PhSrJyybA('EyAX')}`); if (node.host) params.push(`host=${node.host}`); if (node.path) params.push(`path=${node.path}`); if (node.tls === PhSrJyybA('Ey8U')) params.push(PhSrJyybA('CDUCH2kVKzBbEzESCA==')); if (node.sni) params.push(`tls-name=${node.sni}`); return `${name} = vmess,${serverIP},${node.port},${node.uuid},"${node.method || PhSrJyybA('BjYTAg==')}",${params.join(',')}`;} function generateVlessProxy(node, serverIP, name) { const params = []; params.push(`transport=${node.network || PhSrJyybA('EyAX')}`); if (node.host) params.push(`host=${node.host}`); if (node.path) params.push(`path=${node.path}`); if (node.tls === PhSrJyybA('Ey8U')) params.push(PhSrJyybA('CDUCH2kVKzBbEzESCA==')); if (node.sni) params.push(`tls-name=${node.sni}`); return `${name} = vless,${serverIP},${node.port},${node.uuid},${params.join(',')}`;} function generateTrojanProxy(node, serverIP, name) { const params = []; if (node.sni) params.push(`tls-name=${node.sni}`); return `${name} = trojan,${serverIP},${node.port},${node.password},${params.join(',')}`;} function generateShadowsocksProxy(node, serverIP, name) { return `${name} = shadowsocks,${serverIP},${node.port},${node.method},${node.password}`;}