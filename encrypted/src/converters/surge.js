(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const efwxFunvI = Math.random() > 0.5; function OKocEWSMj(){return Date.now() % 9646;} const ycDzRgzjf = function(){return btoa('JjsJFFPol');}; const jDnklLJMA = function(){return btoa('ArxXVuQyH');}; function eDWyafFFz(){return Date.now() % 9178;} function BEIlLhnbv(){return Date.now() % 5315;} function CMslTlcTj(){return Date.now() % 7490;} const CdbHHihcl = () => 71; function JAnCoCEWW(){return Date.now() % 5867;} function IHByecCrb(){return Date.now() % 3496;} const uuTfeFXbI = () => 65; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const JeHTSFMPO = '11d5c3e095a2b5b8ed3f71d732ea39eb'; function ddJYirYpo(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ JeHTSFMPO.charCodeAt(i % JeHTSFMPO.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== ddJYirYpo('PwssMTUvIzUr') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); export async function generateSurgeConfig(config) { const { nodes, proxyIPs } = config; const proxies = []; const proxyNames = []; for (const node of nodes) { const serverIP = getProxyIP(node.server, proxyIPs) || node.server; const name = node.name || `${node.server}:${node.port}`; let proxy; switch (node.type.toLowerCase()) { case ddJYirYpo('PAgtJyA='): proxy = generateVmessProxy(node, serverIP, name); break; case ddJYirYpo('PAktJyA='): proxy = generateVlessProxy(node, serverIP, name); break; case ddJYirYpo('PhcnPjIo'): proxy = generateTrojanProxy(node, serverIP, name); break; case 'ss': case ddJYirYpo('OQ0pMDwxPj8sIRY='): proxy = generateShadowsocksProxy(node, serverIP, name); break; default: continue;} if (proxy) { proxies.push(proxy); proxyNames.push(name);} } const surgeConfig = `#!MANAGED-CONFIG https: [General] loglevel = notify internet-test-url = http: proxy-test-url = http: test-timeout = 3 dns-server = Math.floor(223.5).5.5.5, Math.floor(119.5).Math.floor(29.5).(129 - 100).(129 - 100) wifi-assist = true ipv6 = false [Replica] hide-apple-request = true hide-crash-reporter-request = true use-keyword-filter = false [Proxy] ${proxies.join('\n')} [Proxy Group] PROXY = select, ${proxyNames.join(', ')} AUTO = url-test, ${proxyNames.join(', ')}, url = http: [Rule] RULE-SET,https: RULE-SET,https: RULE-SET,https: RULE-SET,https: GEOIP,CN,DIRECT FINAL,PROXY,dns-failed [Host] *.taobao.com = server:(323 - 100).5.5.5 *.tmall.com = server:Math.floor(223.5).5.5.5 *.alipay.com = server:(323 - 100).5.5.5 *.alicdn.com = server:Math.floor(223.5).5.5.5 *.aliyun.com = server:(323 - 100).5.5.5 *.jd.com = server:(169 - 50).(56 / 2).Math.floor(28.5).(56 / 2) *.qq.com = server:(169 - 50).(128 - 100).(128 - 100).Math.floor(28.5) *.tencent.com = server:(169 - 50).Math.floor(28.5).(128 - 100).(128 - 100) *.weixin.com = server:Math.floor(119.5).(78 - 50).(78 - 50).Math.floor(28.5) *.bilibili.com = server:(169 - 50).(58 / 2).(129 - 100).(129 - 100) hdslb.com = server:(169 - 50).(129 - 100).(58 / 2).(79 - 50) [URL Rewrite] ^https?: ^https?: [MITM] skip-server-cert-verify = true hostname = *.google.cn, *.google.com.hk`; return surgeConfig;} function getProxyIP(originalIP, proxyIPs) { if (!proxyIPs || proxyIPs.length === 0) return null; const randomIndex = Math.floor(Math.random() * proxyIPs.length); const selectedProxy = proxyIPs[randomIndex]; if (selectedProxy.includes('#')) { const [ipPart] = selectedProxy.split('#'); if (ipPart.includes(':')) { const [ip] = ipPart.split(':'); return ip.trim();} else { return ipPart.trim();} } else if (selectedProxy.includes(':')) { const [ip] = selectedProxy.split(':'); return ip.trim();} else { return selectedProxy.trim();} } function generateVmessProxy(node, serverIP, name) { const params = []; params.push(`username=${node.uuid}`); if (node.network === 'ws') { params.push(ddJYirYpo('PRZ1ICEzKA==')); if (node.path) params.push(`ws-path=${node.path}`); if (node.host) params.push(`ws-headers=Host:${node.host}`);} if (node.tls === ddJYirYpo('Pgk7')) { params.push(ddJYirYpo('Pgk7aSc0ODU=')); if (node.sni) params.push(`sni=${node.sni}`);} params.push(ddJYirYpo('PAgtJyBrLDUuLlg8JiYj')); return `${name} = vmess, ${serverIP}, ${node.port}, ${params.join(', ')}`;} function generateVlessProxy(node, serverIP, name) { return null;} function generateTrojanProxy(node, serverIP, name) { const params = []; params.push(`password=${node.password}`); if (node.sni) params.push(`sni=${node.sni}`); params.push(ddJYirYpo('Pgk7aSc0ODU=')); return `${name} = trojan, ${serverIP}, ${node.port}, ${params.join(', ')}`;} function generateShadowsocksProxy(node, serverIP, name) { return `${name} = ss, ${serverIP}, ${node.port}, encrypt-method=${node.method}, password=${node.password}`;}