(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const ppbFkUeDy = Math.random() > 0.5; const dWYgsOWLD = () => 63; function KdjFuGDtK(){return Math.random() * 540;} function qIZVNUnSx(){return Math.random() * 854;} function tWaPFJwvB(){return Date.now() % 9860;} const soYwmUJvL = function(){return btoa('vSWteNWPM');}; function KYAIDWuEq(){return Math.random() * 85;} function fWUHzKjRp(){return Math.random() * 204;} function KvWXURALZ(){return 'ilMrjnQwS'.length;} function prZdWpxaH(){return Math.random() * 843;} function LpuqjVRfW(){return Math.random() * 633;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const EfwbvhREZ = '67f98758b83337bd56ab43f63f17f8f9'; function pDBFHSPyi(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ EfwbvhREZ.charCodeAt(i % EfwbvhREZ.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== pDBFHSPyi('MAgTBxABPCA+') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); export async function xXflJOdHW(config) { const { nodes, proxyIPs, clashTemplate } = config; const proxies = []; const proxyNames = []; for (const node of nodes) { const serverIP = getProxyIP(node.server, proxyIPs) || node.server; const proxyName = node.name || `${node.server}:${node.port}`; let proxy; switch (node.type.toLowerCase()) { case pDBFHSPyi('MwsSEQU='): proxy = generateVmessProxy(node, serverIP, proxyName); break; case pDBFHSPyi('MwoSEQU='): proxy = generateVlessProxy(node, serverIP, proxyName); break; case pDBFHSPyi('MRQYCBcG'): proxy = generateTrojanProxy(node, serverIP, proxyName); break; case 'ss': case pDBFHSPyi('Ng4WBhkfISo5LhU='): proxy = generateShadowsocksProxy(node, serverIP, proxyName); break; default: continue;} if (proxy) { proxies.push(proxy); proxyNames.push(proxyName);} } const clashConfig = { port: (7990 - 100), pDBFHSPyi('NgkUCQVFIiooMQ=='): (7991 - 100), pDBFHSPyi('JAobDQFFPiQ0'): false, mode: pDBFHSPyi('NxMbBw=='), pDBFHSPyi('KQkQTxoNJCA2'): pDBFHSPyi('LAgRDQ=='), pDBFHSPyi('IB4DBwQGMyl3JgkZFgQHPik/Nw=='): pDBFHSPyi('dFRATEZGYmtrf19HW0Y='), dns: { enable: true, ipv6: false, pDBFHSPyi('IQMRAwMEJmg0JAsSERMaJCAo'): [pDBFHSPyi('d1RETENGZ2tv'), pDBFHSPyi('dFdOTERRfHdja1RO'), pDBFHSPyi('fUhPTE5Gag==')], pDBFHSPyi('IAgfAxgLNyF3KAkTBw=='): pDBFHSPyi('IwccB1sBIg=='), pDBFHSPyi('IwccB1sBImgoJAgQBw=='): pDBFHSPyi('dF9PTEdQfHV0dElGVA=='), pDBFHSPyi('IwccB1sBImg8LAoDBwQ='): [ pDBFHSPyi('b0gbAxg='), pDBFHSPyi('b0gbDRUJPg=='), pDBFHSPyi('b0gbDRUJPi01NhI='), pDBFHSPyi('MQ8aB1hCfCY1KA=='), pDBFHSPyi('MQ8aB1hCfCI1Mw=='), pDBFHSPyi('MQ8aB1hCfCA+MEgUDA=='), pDBFHSPyi('MQ8aB1hCfCQqNQoSTBUHPw=='), pDBFHSPyi('MQ8aB0dGeGs5Kgs='), pDBFHSPyi('MQ8aB0RGeGs5Kgs='), pDBFHSPyi('MQ8aB0VGeGs5Kgs='), pDBFHSPyi('MQ8aB0JGeGs5Kgs='), pDBFHSPyi('MQ8aB0NGeGs5Kgs='), pDBFHSPyi('MQ8aB0BGeGs5Kgs='), pDBFHSPyi('MQ8aB0FGeGs5Kgs='), pDBFHSPyi('KxIHTFxGMSo3'), pDBFHSPyi('b0gDCxsNfCA+MEgUDA=='), pDBFHSPyi('b0gZFgZGPTc9awUZ'), pDBFHSPyi('bkgHDRkEfCsuNUgYEBE='), pDBFHSPyi('MQ8aB0dGMSk1MAJZFhMGMSA0MUgUDRs=') ], nameserver: [ pDBFHSPyi('LRIDEgVSfWo+Kg5ZEgMKfSE0NksGFxMaKw=='), pDBFHSPyi('LRIDEgVSfWo+KxVZAxoBNispawUYD1kMPDZ3NBMSEA8='), pDBFHSPyi('LRIDEgVSfWpra1dZU1hZfSE0NksGFxMaKw=='), pDBFHSPyi('LRIDEgVSfWpia15ZWlhQfSE0NksGFxMaKw==') ], fallback: [ pDBFHSPyi('LRIDEgVSfWpra1dZU1hZfSE0NksGFxMaKw=='), pDBFHSPyi('LRIDEgVSfWo+KxVZBRkHNSk/agIZEVsZJyAoPA=='), pDBFHSPyi('LRIDEgVSfWo5KQkCBhAEMzc/aAIZEVgLPSh1IQgETwcdNzcj') ], pDBFHSPyi('IwcbDhQJMS53Iw8bFhMa'): { geoip: true, pDBFHSPyi('IgMYCwZFMSo+IA=='): 'CN', ipcidr: [pDBFHSPyi('d1JHTEZGYmtqalI=')] } }, proxies: proxies, pDBFHSPyi('NRQYGg9FNTc1MBYE'): [ { name: pDBFHSPyi('8K6Lplfoi6Dng4/pgaHmirs='), type: pDBFHSPyi('NgMbBxUc'), proxies: [pDBFHSPyi('4pi+77mpV+iGiOWLnumBoeaKuw=='), pDBFHSPyi('8K6FiVfmlKfpm6rovITnpqk='), pDBFHSPyi('8K6FiFfotb3ovIvlnK/ooLM='), pDBFHSPyi('8K6fiVflhIrnkbXnmpzovow='), ...proxyNames] }, { name: pDBFHSPyi('4pi+77mpV+iGiOWLnumBoeaKuw=='), type: pDBFHSPyi('MBQbTwINITE='), proxies: proxyNames.length > 0 ? proxyNames : [pDBFHSPyi('AS8lJzU8')], url: pDBFHSPyi('LRIDEkxHfTItMkgQEQIJJiw5awUYD1kPNys/NwcDBylaYnE='), interval: Math.floor(300.5), tolerance: (100 - 50) }, { name: pDBFHSPyi('8K6FiVfmlKfpm6rovITnpqk='), type: pDBFHSPyi('IwcbDhQJMS4='), proxies: proxyNames.length > 0 ? proxyNames : [pDBFHSPyi('AS8lJzU8')], url: pDBFHSPyi('LRIDEkxHfTItMkgQEQIJJiw5awUYD1kPNys/NwcDBylaYnE='), interval: (350 - 50) }, { name: pDBFHSPyi('8K6FiFfotb3ovIvlnK/ooLM='), type: pDBFHSPyi('KQkWBlsKMyk7KwUS'), proxies: proxyNames.length > 0 ? proxyNames : [pDBFHSPyi('AS8lJzU8')], url: pDBFHSPyi('LRIDEkxHfTItMkgQEQIJJiw5awUYD1kPNys/NwcDBylaYnE='), interval: Math.floor(300.5), strategy: pDBFHSPyi('JgkZER8bJiA0MUsfAwUAOys9') }, { name: pDBFHSPyi('8K6fiVflhIrnkbXnmpzovow='), type: pDBFHSPyi('NgMbBxUc'), proxies: [pDBFHSPyi('AS8lJzU8')] } ], rules: [ pDBFHSPyi('ASk6Iz8mfxYPAyA+OloEPSY7KUozKyQtERE='), pDBFHSPyi('DDZaIT8sAGlrd1FZUlhYfHV1fUozKyQtERE='), pDBFHSPyi('DDZaIT8sAGlrclRZU0BGYmtqaldFTjIhAAAZEQ=='), pDBFHSPyi('DDZaIT8sAGlrfFRZU0BQfHV0dUlGVFosGxcfBjI='), pDBFHSPyi('DDZaIT8sAGlrdUhHTEZGYmpiaSI+MDMrBg=='), pDBFHSPyi('DDZaIT8sAGlrckhHTEZGYmpiaSI+MDMrBg=='), pDBFHSPyi('DDZaIT8sAGlrdVZZVEJGYmtqaldHTjIhAAAZEQ=='), pDBFHSPyi('AiM4KyZEEQt2AS8lJzU8'), pDBFHSPyi('CCcjIT5E8Ku7hXroi4fng5/pgb7mios=') ] }; if (clashTemplate) { try { const template = JSON.parse(clashTemplate); Object.assign(clashConfig, template); clashConfig.proxies = proxies; if (template[pDBFHSPyi('NRQYGg9FNTc1MBYE')]) { clashConfig[pDBFHSPyi('NRQYGg9FNTc1MBYE')] = template[pDBFHSPyi('NRQYGg9FNTc1MBYE')].map(group => { if (group.proxies && group.proxies.includes(pDBFHSPyi('Ph0HEBkQOyApOBs='))) { group.proxies = group.proxies.map(p => p === pDBFHSPyi('Ph0HEBkQOyApOBs=') ? proxyNames : p).flat();} return group;});} } catch (e) { console.error(pDBFHSPyi('DAgBAxoBNmU5KQcEClYcNygqKQcDB0w='), e);} } return convertToYAML(clashConfig);} function getProxyIP(originalIP, proxyIPs) { if (!proxyIPs || proxyIPs.length === 0) return null; const randomIndex = Math.floor(Math.random() * proxyIPs.length); const selectedProxy = proxyIPs[randomIndex]; if (selectedProxy.includes('#')) { const [ipPart] = selectedProxy.split('#'); if (ipPart.includes(':')) { const [ip] = ipPart.split(':'); return ip.trim();} else { return ipPart.trim();} } else if (selectedProxy.includes(':')) { const [ip] = selectedProxy.split(':'); return ip.trim();} else { return selectedProxy.trim();} } function generateVmessProxy(node, serverIP, name) { const proxy = { name: name, type: pDBFHSPyi('MwsSEQU='), server: serverIP, port: parseInt(node.port), uuid: node.uuid, alterId: parseInt(node.alterId) || 0, cipher: pDBFHSPyi('JBMDDQ=='), network: node.network || pDBFHSPyi('MQUH'), tls: node.tls === pDBFHSPyi('MQoE'), pDBFHSPyi('Ng0eElsLNzcuaBASEB8OKw=='): true }; if (node.network === 'ws') { proxy[pDBFHSPyi('MhVaDQYcIQ==')] = {}; if (node.path) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].path = node.path;} if (node.host) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].headers = { Host: node.host };} } if (node.network === pDBFHSPyi('IhQHAQ==')) { proxy[pDBFHSPyi('IhQHAVsHIjEp')] = {}; if (node.path) { proxy[pDBFHSPyi('IhQHAVsHIjEp')][pDBFHSPyi('IhQHAVsbNzcsLAUSTxgJPyA=')] = node.path;} } return proxy;} function generateVlessProxy(node, serverIP, name) { const proxy = { name: name, type: pDBFHSPyi('MwoSEQU='), server: serverIP, port: parseInt(node.port), uuid: node.uuid, network: node.network || pDBFHSPyi('MQUH'), tls: node.tls === pDBFHSPyi('MQoE'), pDBFHSPyi('Ng0eElsLNzcuaBASEB8OKw=='): true }; if (node.network === 'ws') { proxy[pDBFHSPyi('MhVaDQYcIQ==')] = {}; if (node.path) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].path = node.path;} if (node.host) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].headers = { Host: node.host };} } if (node.network === pDBFHSPyi('IhQHAQ==')) { proxy[pDBFHSPyi('IhQHAVsHIjEp')] = {}; if (node.path) { proxy[pDBFHSPyi('IhQHAVsHIjEp')][pDBFHSPyi('IhQHAVsbNzcsLAUSTxgJPyA=')] = node.path;} } return proxy;} function generateTrojanProxy(node, serverIP, name) { const proxy = { name: name, type: pDBFHSPyi('MRQYCBcG'), server: serverIP, port: parseInt(node.port), password: node.password, pDBFHSPyi('Ng0eElsLNzcuaBASEB8OKw=='): true }; if (node.sni) { proxy.sni = node.sni;} if (node.network === 'ws') { proxy.network = 'ws'; proxy[pDBFHSPyi('MhVaDQYcIQ==')] = {}; if (node.path) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].path = node.path;} if (node.host) { proxy[pDBFHSPyi('MhVaDQYcIQ==')].headers = { Host: node.host };} } return proxy;} function generateShadowsocksProxy(node, serverIP, name) { return { name: name, type: 'ss', server: serverIP, port: parseInt(node.port), cipher: node.method || pDBFHSPyi('JAMET0RdZGg9Jgs='), password: node.password };} function convertToYAML(obj, indent = 0) { const spaces = ' '.repeat(indent); let yaml = ''; for (const [key, value] of Object.entries(obj)) { if (value === null || value === undefined) continue; if (Array.isArray(value)) { yaml += `${spaces}${key}:\n`; for (const item of value) { if (typeof item === pDBFHSPyi('KgQdBxUc')) { yaml += `${spaces} - `; const itemYaml = convertToYAML(item, indent + 2); yaml += itemYaml.substring(spaces.length + 4) + '\n';} else { yaml += `${spaces} - ${item}\n`;} } } else if (typeof value === pDBFHSPyi('KgQdBxUc')) { yaml += `${spaces}${key}:\n`; yaml += convertToYAML(value, indent + 1);} else { const quotedValue = typeof value === pDBFHSPyi('NhIFCxgP') && (value.includes(':') || value.includes('#') || value.includes('-')) ? `"${value}"` : value; yaml += `${spaces}${key}: ${quotedValue}\n`;} } return yaml;}