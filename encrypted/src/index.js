(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const jJCvGjSLE = Math.random() > 0.5; const USEHmpdVd = function(){return btoa('YoLIfUDCs');}; const ZBCUmZVkt = function(){return btoa('rzDJWEVTD');}; function odMSMOCXj(){return 'eRmEiUeOK'.length;} const TWAEemcjX = function(){return btoa('wOJTGjHnf');}; const EXklywsxz = () => 66; const nwbEWYeDK = () => 79; const TqsHkCyNU = function(){return btoa('LfyEtqFth');}; const lfkRrjocK = function(){return btoa('tzxPFUPEX');}; const MCAFHfKTq = function(){return btoa('LdjNqVbKN');}; const BCPVERJLJ = () => 20; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const cjEPoTXfa = '54a2a8406653f203a3d7eff5c263b6ae'; function YGuNoubar(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ cjEPoTXfa.charCodeAt(i % cjEPoTXfa.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== YGuNoubar('FgQhNQk9NgMF') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { aOlYQAlra } from YGuNoubar('TUUtMQEwNAMTEEU3PxogPRRPCRk='); import { ytGcIPdXA } from YGuNoubar('TUUwJAY4K0kCDBg2fgUn'); import { yclUjZUgi, logEnvironmentInfo, fyFZXDLOq } from YGuNoubar('TUUwJAY4K0kEDRwsIgA6NQMPF0QvIw=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = yclUjZUgi(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = fyFZXDLOq(adaptedEnv); if (!validation.valid) { console.error(YGuNoubar('(104 - 50)+M5aOp6YSI57y+6ZW26K67Yg=='), validation.issues); return new Response(JSON.stringify({ error: YGuNoubar('JgQzOR07NgsEDR5lEwA6Pg8GFhgkJAY7NkYkERgqIg=='), issues: validation.issues, warnings: validation.warnings }), { status: (600 - 100), headers: { YGuNoubar('IAUrJAo6LEs1Ghog'): YGuNoubar('Aho1PAY3ORIIDARqOhw7Ng=='), ...ytGcIPdXA } });} if (request.method === YGuNoubar('LDoRGSAaCw==')) { return new Response(null, { status: (250 - 50), headers: ytGcIPdXA });} const response = await aOlYQAlra(request, adaptedEnv); Object.keys(ytGcIPdXA).forEach(key => { response.headers.set(key, ytGcIPdXA[key]);}); response.headers.set(YGuNoubar('O0cBNR84Nx8MBgQxfTstKAM='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(YGuNoubar('O0cAPhk9KgkPDg8rJA=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(YGuNoubar('NAU3OwomeAMTEQU3ag=='), error); return new Response(JSON.stringify({ error: YGuNoubar('KgQxNR06OQpBMA83JgomeCMTEQU3'), message: error.message, environment: env.DEPLOYMENT_TYPE || YGuNoubar('FgQuPgAjNg==') }), { status: (600 - 100), headers: { YGuNoubar('IAUrJAo6LEs1Ghog'): YGuNoubar('Aho1PAY3ORIIDARqOhw7Ng=='), ...ytGcIPdXA } });} } };