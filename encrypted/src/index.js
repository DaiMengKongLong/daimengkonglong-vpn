(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const DOwyZvoiF = Math.random() > 0.5; const yJiWuFdEW = function(){return btoa('CWFtQQfBD');}; function MQFEnjOZz(){return 'UgtuEItop'.length;} function fZlIFNWIJ(){return Math.random() * 751;} function HYXDeuhnE(){return 'fHfNAvsuZ'.length;} function Bchbztlfq(){return Math.random() * 862;} const gZcuAycOT = () => 30; function dvzImjKvE(){return Date.now() % 6153;} const lYDuArQrW = () => 71; function yCrKNrPRV(){return Date.now() % 4335;} const ntHEvHXvx = () => 39; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const NSsqKwKyc = 'c0609aae6bdd1b1b358b8f378ec95864'; function LnklXjhqn(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ NSsqKwKyc.charCodeAt(i % NSsqKwKyc.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== LnklXjhqn('Oz0XFC0eJRwH') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { nJqCrrdsa } from LnklXjhqn('YHwbECUTJxwRPXwBHj4DLgtNJCA='); import { EzzlCjSaw } from LnklXjhqn('YHwGBSIbOFYAISEAXyEE'); import { rwyoDRzHf, logEnvironmentInfo, omnnrXzWn } from LnklXjhqn('YHwGBSIbOFYGICUaAyQZJhwNOn0ZAg=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = rwyoDRzHf(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = omnnrXzWn(adaptedEnv); if (!validation.valid) { console.error(LnklXjhqn('Math.floor(54.5)+h5aOQ6YS+57yf6ZWS6K6YcQ=='), validation.issues); return new Response(JSON.stringify({ error: LnklXjhqn('Cz0FGDkYJRQGICdTMiQZLRAEOyESBSIYJVkmPCEcAw=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { LnklXjhqn('DTwdBS4ZP1Q3NyMW'): LnklXjhqn('LyMDHSIUKg0KIT1cGzgYJQ=='), ...EzzlCjSaw } });} if (request.method === LnklXjhqn('AQMnOAQ5GA==')) { return new Response(null, { status: (300 - 100), headers: EzzlCjSaw });} const response = await nJqCrrdsa(request, adaptedEnv); Object.keys(EzzlCjSaw).forEach(key => { response.headers.set(key, EzzlCjSaw[key]);}); response.headers.set(LnklXjhqn('Fn43FDsbJAAOKz0HXB8OOxw='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(LnklXjhqn('Fn42Hz0eORYNIzYdBQ=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(LnklXjhqn('GTwBGi4FaxwRPDwBSw=='), error); return new Response(JSON.stringify({ error: LnklXjhqn('Bz0HFDkZKhVDHTYBBy4FazwRPDwB'), message: error.message, environment: env.DEPLOYMENT_TYPE || LnklXjhqn('Oz0YHyQAJQ==') }), { status: (550 - 50), headers: { LnklXjhqn('DTwdBS4ZP1Q3NyMW'): LnklXjhqn('LyMDHSIUKg0KIT1cGzgYJQ=='), ...EzzlCjSaw } });} } };