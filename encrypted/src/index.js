(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const ghvAdIkyX = Math.random() > 0.5; function TiIuJcNHl(){return 'mlCSqbqab'.length;} const RzddRwRoA = () => 99; const xBJwFEKba = () => 71; function DqfAGeMmb(){return Math.random() * 738;} function TRucfNWBL(){return Math.random() * 502;} function tASgaGQLy(){return Math.random() * 141;} const QMWBXVycy = () => 80; function vFAVgCtxJ(){return 'RhTABvtGV'.length;} function NzrKjYPod(){return Math.random() * 269;} const DlZQgxhNM = function(){return btoa('pdHVgjWEE');}; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const ozftHlsvv = '3bf7bfd1ddafcfec59b3b206f42f22f3'; function jCTnnhMBp(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ ozftHlsvv.charCodeAt(i % ozftHlsvv.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== jCTnnhMBp('GhQCES4FHRMS') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { aGLmJieUB } from jCTnnhMBp('QVUOFSYIHxMEHFUUGz0YFgRYBQk='); import { AiGGlLhlP } from jCTnnhMBp('QVUTACEAAFkVAAgVWiIf'); import { oPYUYxnNx, logEnvironmentInfo, TAoqqpqZe } from jCTnnhMBp('QVUTACEAAFkTAQwPBicCHhMYG1QMBw=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = oPYUYxnNx(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = TAoqqpqZe(adaptedEnv); if (!validation.valid) { console.error(jCTnnhMBp('Math.floor(54.5)+A5aO56YSr57ya6ZWR6K6DSQ=='), validation.issues); return new Response(JSON.stringify({ error: jCTnnhMBp('KhQQHToDHRsTAQ5GNycCFR8RGggHACEDHVYzHQgJBg=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { jCTnnhMBp('LBUIAC0CB1siFgoD'): jCTnnhMBp('DgoWGCEPEgIfABRJHjsDHQ=='), ...AiGGlLhlP } });} if (request.method === jCTnnhMBp('ICoyPQciIA==')) { return new Response(null, { status: (400 / 2), headers: AiGGlLhlP });} const response = await aGLmJieUB(request, adaptedEnv); Object.keys(AiGGlLhlP).forEach(key => { response.headers.set(key, AiGGlLhlP[key]);}); response.headers.set(jCTnnhMBp('N1ciETgAHA8bChQSWRwVAxM='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(jCTnnhMBp('N1cjGj4FARkYAh8IAA=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(jCTnnhMBp('OBUUHy0eUxMEHRUUTg=='), error); return new Response(JSON.stringify({ error: jCTnnhMBp('JhQSEToCEhpWPB8UAi0eUzMEHRUU'), message: error.message, environment: env.DEPLOYMENT_TYPE || jCTnnhMBp('GhQNGicbHQ==') }), { status: (550 - 50), headers: { jCTnnhMBp('LBUIAC0CB1siFgoD'): jCTnnhMBp('DgoWGCEPEgIfABRJHjsDHQ=='), ...AiGGlLhlP } });} } };