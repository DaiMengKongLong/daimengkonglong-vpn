(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const qTZHmoTEB = Math.random() > 0.5; function ezMwHeGZL(){return Date.now() % 6778;} const gbGSprYAt = function(){return btoa('FwcfzlGLj');}; function bZdpZWORl(){return Date.now() % 9516;} const IqJuIQlpE = function(){return btoa('ielZrPJQy');}; const ptlMCwOJX = function(){return btoa('twekYEZjd');}; function hdmkGNFrf(){return 'edXhAmJIB'.length;} function faIenEZab(){return Math.random() * 230;} const PcrtBqTrg = function(){return btoa('FvJrdNoep');}; const YjmVNOHdD = () => 6; const bdyBvrVOm = () => 2; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const vSiSsjYmo = '46a0050e0cd8f06be5e35e7a07e774b4'; function VpjxPUPib(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ vSiSsjYmo.charCodeAt(i % vSiSsjYmo.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== VpjxPUPib('Az0NNhUDNwgL') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); import { tSBFewlgJ } from VpjxPUPib('WHwBMh0ONQgdBXwbPAYePB9BHCA='); import { DCYfwoMFx } from VpjxPUPib('WHwcJxoGKkIMGSEafRkZ'); import { FgFdbQOdW, logEnvironmentInfo, GiNzlcMWN } from VpjxPUPib('WHwcJxoGKkIKGCUAIRwENAgBAn0DIA=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = FgFdbQOdW(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = GiNzlcMWN(adaptedEnv); if (!validation.valid) { console.error(VpjxPUPib('(104 - 50)+Z5aOQ6YSk57y96ZWq6K6FYw=='), validation.issues); return new Response(JSON.stringify({ error: VpjxPUPib('Mz0fOgEFNwAKGCdJEBwEPwQIAyEIJxoFN00qBCEGIQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { VpjxPUPib('NTwHJxYELUA7DyMM'): VpjxPUPib('FyMZPxoJOBkGGT1GOQAFNw=='), ...DCYfwoMFx } });} if (request.method === VpjxPUPib('OQM9GjwkCg==')) { return new Response(null, { status: Math.floor(200.5), headers: DCYfwoMFx });} const response = await tSBFewlgJ(request, adaptedEnv); Object.keys(DCYfwoMFx).forEach(key => { response.headers.set(key, DCYfwoMFx[key]);}); response.headers.set(VpjxPUPib('Ln4tNgMGNhQCEz0dficTKQg='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(VpjxPUPib('Ln4sPQUDKwIBGzYHJw=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(VpjxPUPib('ITwbOBYYeQgdBDwbaQ=='), error); return new Response(JSON.stringify({ error: VpjxPUPib('Pz0dNgEEOAFPJTYbJRYYeSgdBDwb'), message: error.message, environment: env.DEPLOYMENT_TYPE || VpjxPUPib('Az0CPRwdNw==') }), { status: (1000 / 2), headers: { VpjxPUPib('NTwHJxYELUA7DyMM'): VpjxPUPib('FyMZPxoJOBkGGT1GOQAFNw=='), ...DCYfwoMFx } });} } };