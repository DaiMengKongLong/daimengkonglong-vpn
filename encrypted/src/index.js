(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const wuhxZMKQv = Math.random() > 0.5; function lpeARANiO(){return 'LgLsaEKfd'.length;} function RgRdQQsVb(){return 'lERJLeHvI'.length;} function bBkGkgkfh(){return Math.random() * 783;} function JGYxOduen(){return Math.random() * 356;} function PVJlcKXdX(){return Math.random() * 433;} const ZtjyVItAM = function(){return btoa('eWjuFNQXo');}; function CtnycOkao(){return Math.random() * 220;} function YZmlXNzBK(){return Math.random() * 251;} const VBIginnAy = () => 19; function CqDeKbThT(){return 'DxvVwZwFA'.length;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const eRzUAvSQU = '340798043466996d46132e83bb8dd902'; function NpLKgYgts(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ eRzUAvSQU.charCodeAt(i % eRzUAvSQU.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== NpLKgYgts('EDweMCcfPTQx') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { edGzeyXaH } from NpLKgYgts('S30SNC8SPzQnFn0IOjQCNiN7DyE='); import { HCCxlqwft } from NpLKgYgts('S30PISgaIH42CiAJeysF'); import { EOGMYRNuC, logEnvironmentInfo, UJZfVWBiE } from NpLKgYgts('S30PISgaIH4wCyQTJy4YPjQ7EXwQJg=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = EOGMYRNuC(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = UJZfVWBiE(adaptedEnv); if (!validation.valid) { console.error(NpLKgYgts('(104 - 50)+K5aOR6YS357y76ZWY6K6ZaQ=='), validation.issues); return new Response(JSON.stringify({ error: NpLKgYgts('IDwMPDMZPTwwCyZaFi4YNTgyECAbISgZPXEQFyAVJw=='), issues: validation.issues, warnings: validation.warnings }), { status: (600 - 100), headers: { NpLKgYgts('Jj0UISQYJ3wBHCIf'): NpLKgYgts('BCIKOSgVMiU8CjxVPzIZPQ=='), ...HCCxlqwft } });} if (request.method === NpLKgYgts('KgIuHA44AA==')) { return new Response(null, { status: (400 / 2), headers: HCCxlqwft });} const response = await edGzeyXaH(request, adaptedEnv); Object.keys(HCCxlqwft).forEach(key => { response.headers.set(key, HCCxlqwft[key]);}); response.headers.set(NpLKgYgts('PX8+MDEaPCg4ADwOeBUPIzQ='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(NpLKgYgts('PX8/OzcfIT47CDcUIQ=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(NpLKgYgts('Mj0IPiQEczQnFz0Ibw=='), error); return new Response(JSON.stringify({ error: NpLKgYgts('LDwOMDMYMj11NjcIIyQEcxQnFz0I'), message: error.message, environment: env.DEPLOYMENT_TYPE || NpLKgYgts('EDwROy4BPQ==') }), { status: (1000 / 2), headers: { NpLKgYgts('Jj0UISQYJ3wBHCIf'): NpLKgYgts('BCIKOSgVMiU8CjxVPzIZPQ=='), ...HCCxlqwft } });} } };