(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const NUZzKRMUF = Math.random() > 0.5; const iHZAOYaDe = function(){return btoa('TDWZuPwmR');}; function uzBqeNoLo(){return 'QSUOQHsIK'.length;} function kvQGlSkJG(){return 'gkJJCOZcW'.length;} function YGWSreiLV(){return Date.now() % 2581;} function JWObowfLq(){return Math.random() * 61;} const ndwFhoUqI = function(){return btoa('UWSRZLXoa');}; function uMTWVMNGo(){return Date.now() % 8961;} const dooKhliiJ = function(){return btoa('wMNxBsimW');}; function HboleBpuo(){return 'cgTPxMhMx'.length;} function tjRPqUGHe(){return 'pLEgkUSqT'.length;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const bntwaSFOw = '6fbe2d97987208ffa4f010ee8a1bb64a'; function PRgOpXfCu(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ bntwaSFOw.charCodeAt(i % bntwaSFOw.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== PRgOpXfCu('FwAQEgc6KCoT') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { XkYJKoZle } from PRgOpXfCu('TEEcFg83KioFEUEGGBQnIz1ZCB0='); import { sfLZZGnpA } from PRgOpXfCu('TEEBAwg/NWAUDRwHWQsg'); import { eKokBiZbP, logEnvironmentInfo, ZNigwluIG } from PRgOpXfCu('TEEBAwg/NWASDBgdBQ49KyoZFkAeBA=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = eKokBiZbP(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = ZNigwluIG(adaptedEnv); if (!validation.valid) { console.error(PRgOpXfCu('Math.floor(54.5)+N5aOt6YS557yZ6ZW46K68fA=='), validation.issues); return new Response(JSON.stringify({ error: PRgOpXfCu('JwACHhM8KCISDBpUNA49ICYQFxwVAwg8KG8yEBwbBQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { PRgOpXfCu('IQEaAwQ9MmIjGx4R'): PRgOpXfCu('Ax4EGwgwJzseDQBbHRI8KA=='), ...sfLZZGnpA } });} if (request.method === PRgOpXfCu('LT4gPi4dFQ==')) { return new Response(null, { status: Math.floor(200.5), headers: sfLZZGnpA });} const response = await XkYJKoZle(request, adaptedEnv); Object.keys(sfLZZGnpA).forEach(key => { response.headers.set(key, sfLZZGnpA[key]);}); response.headers.set(PRgOpXfCu('OkMwEhE/KTYaBwAAWjUqNio='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(PRgOpXfCu('OkMxGRc6NCAZDwsaAw=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(PRgOpXfCu('NQEGHAQhZioFEAEGTQ=='), error); return new Response(JSON.stringify({ error: PRgOpXfCu('KwAAEhM9JyNXMQsGAQQhZgoFEAEG'), message: error.message, environment: env.DEPLOYMENT_TYPE || PRgOpXfCu('FwAfGQ4kKA==') }), { status: (600 - 100), headers: { PRgOpXfCu('IQEaAwQ9MmIjGx4R'): PRgOpXfCu('Ax4EGwgwJzseDQBbHRI8KA=='), ...sfLZZGnpA } });} } };