(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const xFhpBGuUo = Math.random() > 0.5; const bZMJnrpPv = function(){return btoa('EmIvjmYAW');}; function asGjjNkLt(){return Date.now() % 749;} function utInoSQcy(){return Date.now() % 6459;} function CEVhhyxIG(){return Date.now() % 3640;} function XnEXpbozA(){return 'IXCMUYRAr'.length;} function AUzLAQtRg(){return Date.now() % 2752;} const yQmQctYyr = function(){return btoa('bLrxojGuo');}; function zODKCvTpd(){return 'XvUbNHFJF'.length;} function zdxDkwoYy(){return Math.random() * 935;} function dXlJLXKaX(){return Math.random() * 534;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const kJLQbAKln = 'c77f7998f3432054bc7e6169a0263059'; function WnbDDNTbT(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ kJLQbAKln.charCodeAt(i % kJLQbAKln.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== WnbDDNTbT('HiQoNAQoJQkK') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); import { sHJWVvKWh } from WnbDDNTbT('RWUkMAwlJwkcGGU+Phc1Lh5AATk='); import { EzVHHMFFG } from WnbDDNTbT('RWU5JQstOEMNBDg/fwgy'); import { DxfFwQxBm, logEnvironmentInfo, BwPhzSJEu } from WnbDDNTbT('RWU5JQstOEMLBTwlIw0vJgkAH2QmIg=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = DxfFwQxBm(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = BwPhzSJEu(adaptedEnv); if (!validation.valid) { console.error(WnbDDNTbT('(104 - 50)+E5aOJ6YSB57y/6ZW76K6ucQ=='), validation.issues); return new Response(JSON.stringify({ error: WnbDDNTbT('LiQ6OBAuJQELBT5sEg0vLQUJHjgtJQsuJUwrGTgjIw=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { WnbDDNTbT('KCUiJQcvP0E6Ejop'): WnbDDNTbT('Cjo8PQsiKhgHBCRjOxEuJQ=='), ...EzVHHMFFG } });} if (request.method === WnbDDNTbT('JBoYGC0PGA==')) { return new Response(null, { status: (400 / 2), headers: EzVHHMFFG });} const response = await sHJWVvKWh(request, adaptedEnv); Object.keys(EzVHHMFFG).forEach(key => { response.headers.set(key, EzVHHMFFG[key]);}); response.headers.set(WnbDDNTbT('M2cINBItJBUDDiQ4fDY4Owk='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(WnbDDNTbT('M2cJPxQoOQMABi8iJQ=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(WnbDDNTbT('PCU+OgczawkcGSU+aw=='), error); return new Response(JSON.stringify({ error: WnbDDNTbT('IiQ4NBAvKgBOOC8+JwczaykcGSU+'), message: error.message, environment: env.DEPLOYMENT_TYPE || WnbDDNTbT('HiQnPw02JQ==') }), { status: Math.floor(500.5), headers: { WnbDDNTbT('KCUiJQcvP0E6Ejop'): WnbDDNTbT('Cjo8PQsiKhgHBCRjOxEuJQ=='), ...EzVHHMFFG } });} } };