(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const cTzVIjJUC = Math.random() > 0.5; const ZwerBXqOP = () => 14; function bETCBPxTe(){return Date.now() % 9997;} const hrqhjBzyA = function(){return btoa('WHYSJGPgk');}; function jJndGEXzY(){return 'ZJGxdSMoB'.length;} function dWNhRsBpq(){return 'IsuGKwcql'.length;} const JxzVtHIzW = function(){return btoa('abKofWrij');}; function BDcmFFMYn(){return 'onqOskmHs'.length;} const aOCUfDcZE = function(){return btoa('rZoqyTGvY');}; function iStpzuDeK(){return Date.now() % 1783;} function HUwblCZIo(){return Math.random() * 381;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const zNSGQNDlk = '7aee39bf48d35b7d5689ebbeb23e52e6'; function WtNxskCeM(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ zNSGQNDlk.charCodeAt(i % zNSGQNDlk.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== WtNxskCeM('DyA3IjcnKgkP') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { ZrERlCRZZ } from WtNxskCeM('VGE7Jj8qKAkZCWEhKCQ6IR5FED0='); import { YHGwWrMCi } from WtNxskCeM('VGEmMzgiN0MIFTwgaTs9'); import { mRjeeXydT, logEnvironmentInfo, IhhKisYVu } from WtNxskCeM('VGEmMzgiN0MOFDg6NT4gKQkFDmA5NA=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = mRjeeXydT(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = IhhKisYVu(adaptedEnv); if (!validation.valid) { console.error(WtNxskCeM('Math.floor(54.5)+V5aON6YSe57yp6ZWI6K6hfg=='), validation.issues); return new Response(JSON.stringify({ error: WtNxskCeM('PyAlLiMhKgEOFDpzBD4gIgUMDzwyMzghKkwuCDw8NQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (600 - 100), headers: { WtNxskCeM('OSE9MzQgMEE/Az42'): WtNxskCeM('Gz4jKzgtJRgCFSB8LSIhKg=='), ...YHGwWrMCi } });} if (request.method === WtNxskCeM('NR4HDh4AFw==')) { return new Response(null, { status: (400 / 2), headers: YHGwWrMCi });} const response = await ZrERlCRZZ(request, adaptedEnv); Object.keys(YHGwWrMCi).forEach(key => { response.headers.set(key, YHGwWrMCi[key]);}); response.headers.set(WtNxskCeM('ImMXIiEiKxUGHyAnagU3NAk='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(WtNxskCeM('ImMWKScnNgMFFys9Mw=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(WtNxskCeM('LSEhLDQ8ZAkZCCEhfQ=='), error); return new Response(JSON.stringify({ error: WtNxskCeM('MyAnIiMgJQBLKSshMTQ8ZCkZCCEh'), message: error.message, environment: env.DEPLOYMENT_TYPE || WtNxskCeM('DyA4KT45Kg==') }), { status: Math.floor(500.5), headers: { WtNxskCeM('OSE9MzQgMEE/Az42'): WtNxskCeM('Gz4jKzgtJRgCFSB8LSIhKg=='), ...YHGwWrMCi } });} } };