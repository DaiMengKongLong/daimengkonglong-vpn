(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const zaXajMcsd = Math.random() > 0.5; const mwmLUNLAa = () => 15; function MniFrCxKd(){return 'kewiCnwKH'.length;} const MDZTWjmXK = function(){return btoa('uzCuWUuBQ');}; const NqitAkQKW = function(){return btoa('YXXBUilqq');}; function kvdiKKiGe(){return 'BpJcvLITZ'.length;} function AnRYoZIxu(){return Date.now() % 1313;} const zOIPRaPLS = () => 41; const JQltmnuoP = function(){return btoa('JMNRIAxVs');}; function LcITvnekc(){return 'PIbRkncRt'.length;} const BHsbAmLhJ = () => 82; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const olGOABLYY = '228d29d6a3c02c3e412d5978f011228f'; function SEXnNQGFR(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ olGOABLYY.charCodeAt(i % olGOABLYY.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== SEXnNQGFR('GgIjKicrIjw9') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { LSwrvhVrE } from SEXnNQGFR('QUMvLi8mIDwrHEM1IDQ2KSt3BR8='); import { hnrUkRIYg } from SEXnNQGFR('QUMyOyguP3Y6AB40YSsx'); import { obiroEGwI, logEnvironmentInfo, VTKvXPGoD } from SEXnNQGFR('QUMyOyguP3Y8ARouPS4sITw3G0ItPA=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = obiroEGwI(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = VTKvXPGoD(adaptedEnv); if (!validation.valid) { console.error(SEXnNQGFR('(104 - 50)+A5aOv6YSK57yh6ZWY6K6tdg=='), validation.issues); return new Response(JSON.stringify({ error: SEXnNQGFR('KgIxJjMtIjQ8ARhnDC4sKjA+Gh4mOygtInkcHR4oPQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (550 - 50), headers: { SEXnNQGFR('LAMpOyQsOHQNFhwi'): SEXnNQGFR('Dhw3IyghLS0wAAJoJTItIg=='), ...hnrUkRIYg } });} if (request.method === SEXnNQGFR('IDwTBg4MHw==')) { return new Response(null, { status: (250 - 50), headers: hnrUkRIYg });} const response = await LSwrvhVrE(request, adaptedEnv); Object.keys(hnrUkRIYg).forEach(key => { response.headers.set(key, hnrUkRIYg[key]);}); response.headers.set(SEXnNQGFR('N0EDKjEuIyA0CgIzYhU7PDw='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(SEXnNQGFR('N0ECITcrPjY3AgkpOw=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(SEXnNQGFR('OAM1JCQwbDwrHQM1dQ=='), error); return new Response(JSON.stringify({ error: SEXnNQGFR('JgIzKjMsLTV5PAk1OSQwbBwrHQM1'), message: error.message, environment: env.DEPLOYMENT_TYPE || SEXnNQGFR('GgIsIS41Ig==') }), { status: (600 - 100), headers: { SEXnNQGFR('LAMpOyQsOHQNFhwi'): SEXnNQGFR('Dhw3IyghLS0wAAJoJTItIg=='), ...hnrUkRIYg } });} } };