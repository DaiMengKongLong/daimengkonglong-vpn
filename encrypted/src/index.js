(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const xcdLiYMZo = Math.random() > 0.5; const IDUOaCzId = () => 1; function ZeTdyuYzj(){return Date.now() % 8154;} function YmcHuKzAi(){return 'DEWRjuuID'.length;} const pExmXLWRg = function(){return btoa('mRvBEfXBM');}; function JGBMGBDKK(){return 'ncgZzqQRe'.length;} function VUliIYbEH(){return 'lxXOYYvHK'.length;} function YRLBVgFIT(){return Math.random() * 477;} function ZMHOdyWpU(){return Math.random() * 3;} function XiMTXxxWn(){return 'JfmlbndbT'.length;} function ANPFUYECg(){return 'rRbYWCZQc'.length;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const HqygRXofw = '2934cb4a27a0e3876c62f89dcc4fe587'; function UaaOGFrXx(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ HqygRXofw.charCodeAt(i % HqygRXofw.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== UaaOGFrXx('PR8dAjQxAQMT') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); import { vzVPrLrXp } from UaaOGFrXx('Zl4RBjw8AwMFO14LCCcsChRZIgI='); import { efobQTxng } from UaaOGFrXx('Zl4MEzs0HEkUJwMKSTgr'); import { KMwNsRHZi, logEnvironmentInfo, nmZutmPBj } from UaaOGFrXx('Zl4MEzs0HEkSJgcQFT02AgMZPF8TFA=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = KMwNsRHZi(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = nmZutmPBj(adaptedEnv); if (!validation.valid) { console.error(UaaOGFrXx('(154 - 100)+n5aOy6YS057yJ6ZWL6K63VQ=='), validation.issues); return new Response(JSON.stringify({ error: UaaOGFrXx('DR8PDiA3AQsSJgVZJD02CQ8QPQMYEzs3AUYyOgMWFQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (550 - 50), headers: { UaaOGFrXx('Cx4XEzc2G0sjMQEc'): UaaOGFrXx('KQEJCzs7DhIeJx9WDSE3AQ=='), ...efobQTxng } });} if (request.method === UaaOGFrXx('ByEtLh0WPA==')) { return new Response(null, { status: (250 - 50), headers: efobQTxng });} const response = await vzVPrLrXp(request, adaptedEnv); Object.keys(efobQTxng).forEach(key => { response.headers.set(key, efobQTxng[key]);}); response.headers.set(UaaOGFrXx('EFw9AiI0AB8aLR8NSgYhHwM='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(UaaOGFrXx('EFw8CSQxHQkZJRQXEw=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(UaaOGFrXx('Hx4LDDcqTwMFOh4LXQ=='), error); return new Response(JSON.stringify({ error: UaaOGFrXx('AR8NAiA2DgpXGxQLETcqTyMFOh4L'), message: error.message, environment: env.DEPLOYMENT_TYPE || UaaOGFrXx('PR8SCT0vAQ==') }), { status: (600 - 100), headers: { UaaOGFrXx('Cx4XEzc2G0sjMQEc'): UaaOGFrXx('KQEJCzs7DhIeJx9WDSE3AQ=='), ...efobQTxng } });} } };