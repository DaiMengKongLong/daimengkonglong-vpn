(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const gSOXiFXou = Math.random() > 0.5; function zZTFcrmLv(){return Date.now() % 5575;} function unZMiHsqS(){return Math.random() * 695;} function fQFUEICiX(){return Math.random() * 21;} function QxZdeTUDe(){return Date.now() % 1337;} function hPNskxopi(){return Date.now() % 9788;} function SuppejRvd(){return Math.random() * 11;} function vslVPmgCT(){return Date.now() % 1811;} function BDVGamNTj(){return 'HhXKqnQRB'.length;} function zocKRIQzU(){return Date.now() % 1688;} function BKENNMfOD(){return 'TFoczeIMW'.length;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const gFfnXVCgO = '9642e9235ca70c5b8de481b2bd60ffd8'; function JIvDZpLcN(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ gFfnXVCgO.charCodeAt(i % gFfnXVCgO.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== JIvDZpLcN('EigCCz4/LQIr') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { FtfVlgMCG } from JIvDZpLcN('SWkODzYyLwI9FGkUAS0iJhVhDTU='); import { guJGxgEDI } from JIvDZpLcN('SWkTGjE6MEgsCDQVQDIl'); import { ZRecHNrYC, logEnvironmentInfo, rsJODbBrN } from JIvDZpLcN('SWkTGjE6MEgqCTAPHDc4LgIhE2gMHQ=='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = ZRecHNrYC(env); if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = rsJODbBrN(adaptedEnv); if (!validation.valid) { console.error(JIvDZpLcN('(104 - 50)+I5aOF6YSr57yA6ZWB6K65eQ=='), validation.issues); return new Response(JSON.stringify({ error: JIvDZpLcN('IigQByo5LQoqCTJGLTc4JQ4oEjQHGjE5LUcKFTQJHA=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { JIvDZpLcN('JCkIGj04N0obHjYD'): JIvDZpLcN('BjYWAjE1IhMmCChJBCs5LQ=='), ...guJGxgEDI } });} if (request.method === JIvDZpLcN('KBYyJxcYEA==')) { return new Response(null, { status: (400 / 2), headers: guJGxgEDI });} const response = await FtfVlgMCG(request, adaptedEnv); Object.keys(guJGxgEDI).forEach(key => { response.headers.set(key, guJGxgEDI[key]);}); response.headers.set(JIvDZpLcN('P2siCyg6LB4iAigSQwwvMwI='), adaptedEnv.DEPLOYMENT_TYPE); response.headers.set(JIvDZpLcN('P2sjAC4/MQghCiMIGg=='), adaptedEnv.ENVIRONMENT); return response;} catch (error) { console.error(JIvDZpLcN('MCkUBT0kYwI9FSkUVA=='), error); return new Response(JSON.stringify({ error: JIvDZpLcN('LigSCyo4IgtvNCMUGD0kYyI9FSkU'), message: error.message, environment: env.DEPLOYMENT_TYPE || JIvDZpLcN('EigNADchLQ==') }), { status: (600 - 100), headers: { JIvDZpLcN('JCkIGj04N0obHjYD'): JIvDZpLcN('BjYWAjE1IhMmCChJBCs5LQ=='), ...guJGxgEDI } });} } };