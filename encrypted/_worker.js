(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const xSdpFyhkE = Math.random() > 0.5; function SToSFSaJp(){return 'fgxuJURPg'.length;} function abHyoyFxT(){return Date.now() % 4865;} const mDXhDwLvw = () => 29; function XfBzvQhRZ(){return Date.now() % 3161;} const NNJweJLYp = function(){return btoa('YvHKzopHa');}; function idsuABdTr(){return Date.now() % 1266;} function laEYwlvOg(){return Date.now() % 8497;} function CviHTYgsN(){return Math.random() * 989;} const YrxCIRhzZ = function(){return btoa('PgGAiBBGH');}; const MOvOqEvXv = () => 58; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const mzggyPmLm = '97e0176eab506efcbd580e1e6b688c8b'; function XXGPJxOUf(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ mzggyPmLm.charCodeAt(i % mzggyPmLm.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== XXGPJxOUf('GBQDAh85AykJ') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { tSBFewlgJ } from XXGPJxOUf('Q1UUFRp/BS0DCRYCFQp/HyMYGR8VSRMj'); import { DCYfwoMFx } from XXGPJxOUf('Q1UUFRp/GDgEAQlIBBYiHmIHHg=='); import { FgFdbQOdW, logEnvironmentInfo, GiNzlcMWN } from XXGPJxOUf('Q1UUFRp/GDgEAQlIAhcmBD4CAxcCCQ1+Bz8='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = FgFdbQOdW(env); adaptedEnv.DEPLOYMENT_TYPE = XXGPJxOUf('HRsAAgo='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = GiNzlcMWN(adaptedEnv); if (!validation.valid) { console.error(XXGPJxOUf('PRsAAgpw54+C5aOP6YSg57yD6ZWj6K6IXQ=='), validation.issues); return new Response(JSON.stringify({ error: XXGPJxOUf('PRsAAgpwKCIbBAgICRQ1AzhNLhUJARA3GD4MGRMICVkVHz4CHw=='), issues: validation.issues, warnings: validation.warnings }), { status: (600 - 100), headers: { XXGPJxOUf('LhUJExw+GWE5FAoC'): XXGPJxOUf('DAoXCxAzDDgEAhRIDQo/Aw=='), ...DCYfwoMFx } });} if (request.method === XXGPJxOUf('IiozLjYePg==')) { return new Response(null, { status: (400 / 2), headers: DCYfwoMFx });} const response = await tSBFewlgJ(request, adaptedEnv); Object.keys(DCYfwoMFx).forEach(key => { response.headers.set(key, DCYfwoMFx[key]);}); response.headers.set(XXGPJxOUf('NVcjAgk8AjUACBQTSi0pHSk='), XXGPJxOUf('HRsAAgo=')); response.headers.set(XXGPJxOUf('NVciCQ85HyMDAB8JEw=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(XXGPJxOUf('NVc3Bh41HmEvHxsJBBE='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(XXGPJxOUf('PRsAAgpwOiMfBh8VRxwiHyMfVw=='), error); return new Response(JSON.stringify({ error: XXGPJxOUf('JBQTAgs+DCBNPh8VERwiTQkfHxUV'), message: error.message, environment: XXGPJxOUf('PRsAAgo=') }), { status: (550 - 50), headers: { XXGPJxOUf('LhUJExw+GWE5FAoC'): XXGPJxOUf('DAoXCxAzDDgEAhRIDQo/Aw=='), ...DCYfwoMFx } });} } };