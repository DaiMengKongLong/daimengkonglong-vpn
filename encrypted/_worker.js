(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const LNZPuiGMB = Math.random() > 0.5; function aVtXhOpue(){return 'meHsgpscL'.length;} const AALKlAqPy = function(){return btoa('CAgkSzYMt');}; const cYvDMROeK = function(){return btoa('YhVBjvfOv');}; function DsYJFkbCM(){return 'bwDYHAHRe'.length;} const FlnJILaDZ = function(){return btoa('UnirZArJV');}; function eYaxSFRLF(){return Date.now() % 1703;} function imXEscSVB(){return Math.random() * 658;} function tRoTfURau(){return Math.random() * 238;} const MFmyLqdCt = function(){return btoa('DfrVQuusL');}; const aeYIfwZXG = function(){return btoa('sFxSlWYUB');}; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const lNmXdeCPr = 'df27c43683d6bd27eae245c08f76ad3b'; function FyrbdNzkR(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ lNmXdeCPr.charCodeAt(i % lNmXdeCPr.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== FyrbdNzkR('GSAJPQIMLTUW') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { edGzeyXaH } from FyrbdNzkR('QmEeKgdKKzEcCCIIKhdKMT8HGCsfdg4W'); import { HCCxlqwft } from FyrbdNzkR('QmEeKgdKNiQbAD1COwsXMH4YHw=='); import { EOGMYRNuC, logEnvironmentInfo, UJZfVWBiE } from FyrbdNzkR('QmEeKgdKNiQbAD1CPQoTKiIdAiMINhBLKSM='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = EOGMYRNuC(env); adaptedEnv.DEPLOYMENT_TYPE = FyrbdNzkR('HC8KPRc='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = UJZfVWBiE(adaptedEnv); if (!validation.valid) { console.error(FyrbdNzkR('PC8KPRdF54+s5aOT6YS/57yC6ZWX6K6CYg=='), validation.issues); return new Response(JSON.stringify({ error: FyrbdNzkR('PC8KPRdFBj4EBTwCNgkALSRSLyEDPg0CNiITGCcCNkQgMSIdHg=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { FyrbdNzkR('LyEDLAELN30mFT4I'): FyrbdNzkR('DT4dNA0GIiQbAyBCMhcKLQ=='), ...HCCxlqwft } });} if (request.method === FyrbdNzkR('Ix45ESsrEA==')) { return new Response(null, { status: (250 - 50), headers: HCCxlqwft });} const response = await edGzeyXaH(request, adaptedEnv); Object.keys(HCCxlqwft).forEach(key => { response.headers.set(key, HCCxlqwft[key]);}); response.headers.set(FyrbdNzkR('NGMpPRQJLCkfCSAZdTAcMzU='), FyrbdNzkR('HC8KPRc=')); response.headers.set(FyrbdNzkR('NGMoNhIMMT8cASsDLA=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(FyrbdNzkR('NGM9OQMAMH0wHi8DOww='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(FyrbdNzkR('PC8KPRdFFD8ABysfeAEXMT8AVg=='), error); return new Response(JSON.stringify({ error: FyrbdNzkR('JSAZPRYLIjxSPysfLgEXYxUAHiEf'), message: error.message, environment: FyrbdNzkR('PC8KPRc=') }), { status: (1000 / 2), headers: { FyrbdNzkR('LyEDLAELN30mFT4I'): FyrbdNzkR('DT4dNA0GIiQbAyBCMhcKLQ=='), ...HCCxlqwft } });} } };