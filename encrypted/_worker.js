(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const NvYjsVDhf = Math.random() > 0.5; const qhkhTLUzz = () => 28; function EBXcoYFQP(){return 'wTORWCcsr'.length;} function oazOOimmz(){return Math.random() * 629;} function MsMwqfFJd(){return 'lNuAoQJCW'.length;} const GGxtqcvGx = function(){return btoa('XKMXkMdtR');}; function FGOpnKmmC(){return Date.now() % 7910;} function RKNzpQssj(){return 'HLvoUjZrX'.length;} function YGCzBPisd(){return Math.random() * 404;} const kbGizCpxA = () => 59; const HDOVgOlGg = () => 60; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const aFUSvsaGs = '77334ee37ddd5c8e50f269ab69724024'; function yNPvpLXhj(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ aFUSvsaGs.charCodeAt(i % aFUSvsaGs.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== yNPvpLXhj('FCgxNhAaDyIX') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); import { sHJWVvKWh } from yNPvpLXhj('T2kmIRVcCSYdBSowIQVcEygGFSMnfRwA'); import { EzVHHMFFG } from yNPvpLXhj('T2kmIRVcFDMaDTV6MBkBEmkZEg=='); import { DxfFwQxBm, logEnvironmentInfo, BwPhzSJEu } from yNPvpLXhj('T2kmIRVcFDMaDTV6NhgFCDUcDyswPQJdCzQ='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = DxfFwQxBm(env); adaptedEnv.DEPLOYMENT_TYPE = yNPvpLXhj('EScyNgU='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = BwPhzSJEu(adaptedEnv); if (!validation.valid) { console.error(yNPvpLXhj('MScyNgVT54+O5aOE6YS+57yP6ZWf6K66aQ=='), validation.issues); return new Response(JSON.stringify({ error: yNPvpLXhj('MScyNgVTJCkFCDQ6PRsWDzNTIik7NR8UFDUSFS86PVY2EzUcEw=='), issues: validation.issues, warnings: validation.warnings }), { status: (600 - 100), headers: { yNPvpLXhj('Iik7JxMdFWonGDYw'): yNPvpLXhj('ADYlPx8QADMaDih6OQUcDw=='), ...EzVHHMFFG } });} if (request.method === yNPvpLXhj('LhYBGjk9Mg==')) { return new Response(null, { status: (300 - 100), headers: EzVHHMFFG });} const response = await sHJWVvKWh(request, adaptedEnv); Object.keys(EzVHHMFFG).forEach(key => { response.headers.set(key, EzVHHMFFG[key]);}); response.headers.set(yNPvpLXhj('OWsRNgYfDj4eBCghfiIKESI='), yNPvpLXhj('EScyNgU=')); response.headers.set(yNPvpLXhj('OWsQPQAaEygdDCM7Jw=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(yNPvpLXhj('OWsFMhEWEmoxEyc7MB4='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(yNPvpLXhj('MScyNgVTNigBCiMncxMBEygBWw=='), error); return new Response(JSON.stringify({ error: yNPvpLXhj('KCghNgQdACtTMiMnJRMBQQIBEykn'), message: error.message, environment: yNPvpLXhj('MScyNgU=') }), { status: (1000 / 2), headers: { yNPvpLXhj('Iik7JxMdFWonGDYw'): yNPvpLXhj('ADYlPx8QADMaDih6OQUcDw=='), ...EzVHHMFFG } });} } };