(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const pdhdrWAcq = Math.random() > 0.5; const MTMismcgW = function(){return btoa('DGQbeJKmV');}; function edzqugWHz(){return Math.random() * 889;} const thDkkmvEK = () => 83; function oduwhKYIK(){return Date.now() % 344;} const ctYJCVmhJ = () => 46; const pIELsQhpK = () => 95; const uZyasiYjl = () => 53; const xNlegoKKi = () => 37; const OCcROZBcH = function(){return btoa('XhWVDMxtB');}; const iRmoHNfhG = () => 16; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const iJZSEjaFn = 'eefbbc008796c962bd94825f6236570d'; function AVoGIAghL(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ iJZSEjaFn.charCodeAt(i % iJZSEjaFn.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== AVoGIAghL('HCQ+NiMDDyMK') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (150 - 50);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { ZrERlCRZZ } from AVoGIAghL('R2UpISZFCScADSY/ITZFEykbHS8ofS8Z'); import { YHGwWrMCi } from AVoGIAghL('R2UpISZFFDIHBTl1MCoYEmgEGg=='); import { mRjeeXydT, logEnvironmentInfo, IhhKisYVu } from AVoGIAghL('R2UpISZFFDIHBTl1NiscCDQBByc/PTFECzU='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = mRjeeXydT(env); adaptedEnv.DEPLOYMENT_TYPE = AVoGIAghL('GSs9NjY='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = IhhKisYVu(adaptedEnv); if (!validation.valid) { console.error(AVoGIAghL('OSs9NjZK54+O5aOF6YSj57yH6ZWT6K61aQ=='), validation.issues); return new Response(JSON.stringify({ error: AVoGIAghL('OSs9NjZKJCgYADg1PSgPDzJOKiU0NSwNFDQPHSM1PWUvEzQBGw=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { AVoGIAghL('KiU0JyAEFWs6EDo/'): AVoGIAghL('CDoqPywJADIHBiR1OTYFDw=='), ...YHGwWrMCi } });} if (request.method === AVoGIAghL('JhoOGgokMg==')) { return new Response(null, { status: Math.floor(200.5), headers: YHGwWrMCi });} const response = await ZrERlCRZZ(request, adaptedEnv); Object.keys(YHGwWrMCi).forEach(key => { response.headers.set(key, YHGwWrMCi[key]);}); response.headers.set(AVoGIAghL('MWceNjUGDj8DDCQufhETESM='), AVoGIAghL('GSs9NjY=')); response.headers.set(AVoGIAghL('MWcfPTMDEykABC80Jw=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(AVoGIAghL('MWcKMiIPEmssGys0MC0='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(AVoGIAghL('OSs9NjZKNikcAi8ocyAYEykcUw=='), error); return new Response(JSON.stringify({ error: AVoGIAghL('ICQuNjcEACpOOi8oJSAYQQMcGyUo'), message: error.message, environment: AVoGIAghL('OSs9NjY=') }), { status: (550 - 50), headers: { AVoGIAghL('KiU0JyAEFWs6EDo/'): AVoGIAghL('CDoqPywJADIHBiR1OTYFDw=='), ...YHGwWrMCi } });} } };