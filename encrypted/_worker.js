(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const HXSYJnYCb = Math.random() > 0.5; function bRBeiZaYg(){return 'BiznnKbSk'.length;} function LZrfgyDcx(){return Math.random() * 757;} const hbeJnoAyM = function(){return btoa('nHTpftbHB');}; function dmGFgELjz(){return Date.now() % 6735;} function JhztwmuTl(){return Date.now() % 9718;} function JrtafeVfN(){return 'krlxOVAUj'.length;} function HahIWOnNu(){return 'biQutOrvh'.length;} function bypmqxMbp(){return Math.random() * 61;} function ECNcPRnpD(){return Date.now() % 383;} function wrPydiLJT(){return Date.now() % 3549;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const PRtlziutN = '35a68be3baa4c5cc534c3dad36afc273'; function njAmrbrFJ(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ PRtlziutN.charCodeAt(i % PRtlziutN.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== njAmrbrFJ('JTwQCRwAGxEq') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { XkYJKoZle } from njAmrbrFJ('fn0HHhlGHRUgND4RHglGBxs7JDcGQhAa'); import { sfLZZGnpA } from njAmrbrFJ('fn0HHhlGAAAnPCFbDxUbBlokIw=='); import { eKokBiZbP, logEnvironmentInfo, ZNigwluIG } from njAmrbrFJ('fn0HHhlGAAAnPCFbCRQfHAYhPj8RAg5HHwc='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = eKokBiZbP(env); adaptedEnv.DEPLOYMENT_TYPE = njAmrbrFJ('IDMTCQk='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = ZNigwluIG(adaptedEnv); if (!validation.valid) { console.error(njAmrbrFJ('ADMTCQlJ54+a5aO36YSD57y+6ZWL6K6bVg=='), validation.issues); return new Response(JSON.stringify({ error: njAmrbrFJ('ADMTCQlJMBo4OSAbAhcMGwBuEz0aChMOAAYvJDsbAlosBwYhIg=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { njAmrbrFJ('Ez0aGB8HAVkaKSIR'): njAmrbrFJ('MSIEABMKFAAnPzxbBgkGGw=='), ...sfLZZGnpA } });} if (request.method === njAmrbrFJ('HwIgJTUnJg==')) { return new Response(null, { status: (300 - 100), headers: sfLZZGnpA });} const response = await XkYJKoZle(request, adaptedEnv); Object.keys(sfLZZGnpA).forEach(key => { response.headers.set(key, sfLZZGnpA[key]);}); response.headers.set(njAmrbrFJ('CH8wCQoFGg0jNTwAQS4QBRE='), njAmrbrFJ('IDMTCQk=')); response.headers.set(njAmrbrFJ('CH8xAgwABxsgPTcaGA=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(njAmrbrFJ('CH8kDR0MBlkMIjMaDxI='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(njAmrbrFJ('ADMTCQlJIhs8OzcGTB8bBxs8ag=='), error); return new Response(JSON.stringify({ error: njAmrbrFJ('GTwACQgHFBhuAzcGGh8bVTE8Ij0G'), message: error.message, environment: njAmrbrFJ('ADMTCQk=') }), { status: (1000 / 2), headers: { njAmrbrFJ('Ez0aGB8HAVkaKSIR'): njAmrbrFJ('MSIEABMKFAAnPzxbBgkGGw=='), ...sfLZZGnpA } });} } };