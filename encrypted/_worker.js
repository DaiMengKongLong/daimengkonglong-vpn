(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const jqyPScloO = Math.random() > 0.5; const cBXPdrVkf = () => 54; const gndTpuimr = function(){return btoa('iwJYukJjQ');}; const HKWTbhkpF = () => 60; function YXEWdAgth(){return 'ShttVTAFD'.length;} const GlZSysGlx = () => 44; const WCeUCOgNW = () => 81; const PXUQUKAvk = () => 30; const AXRnQLkNK = function(){return btoa('dkapjmQDh');}; const PlsogbPzd = function(){return btoa('BTbZCVawP');}; function dJGqKojrw(){return Date.now() % 1732;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const SvKQXwScr = 'e42779ee91fdd3b4272fa07e0110ff03'; function HJQnhKZGY(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ SvKQXwScr.charCodeAt(i % SvKQXwScr.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== HJQnhKZGY('JhgvND4ePQYW') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); import { aOlYQAlra } from HJQnhKZGY('fVk4IztYOwIcNxouIytYIQwHJxM5fzIE'); import { ytGcIPdXA } from HJQnhKZGY('fVk4IztYJhcbPwVkMjcFIE0YIA=='); import { yclUjZUgi, logEnvironmentInfo, fyFZXDLOq } from HJQnhKZGY('fVk4IztYJhcbPwVkNDYBOhEdPRsuPyxZORA='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = yclUjZUgi(env); adaptedEnv.DEPLOYMENT_TYPE = HJQnhKZGY('IxcsNCs='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = fyFZXDLOq(adaptedEnv); if (!validation.valid) { console.error(HJQnhKZGY('AxcsNCtX54+85aOg6YS/57y96ZWv6K6kaw=='), validation.issues); return new Response(JSON.stringify({ error: HJQnhKZGY('AxcsNCtXFg0EOgQkPzUSPRdSEBklNzEQJhETJx8kP3gyIREdIQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { HJQnhKZGY('EBklJT0ZJ04mKgYu'): HJQnhKZGY('MgY7PTEUMhcbPBhkOysYPQ=='), ...ytGcIPdXA } });} if (request.method === HJQnhKZGY('HCYfGBc5AA==')) { return new Response(null, { status: Math.floor(200.5), headers: ytGcIPdXA });} const response = await aOlYQAlra(request, adaptedEnv); Object.keys(ytGcIPdXA).forEach(key => { response.headers.set(key, ytGcIPdXA[key]);}); response.headers.set(HJQnhKZGY('C1sPNCgbPBofNhg/fAwOIwY='), HJQnhKZGY('IxcsNCs=')); response.headers.set(HJQnhKZGY('C1sOPy4eIQwcPhMlJQ=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(HJQnhKZGY('C1sbMD8SIE4wIRclMjA='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(HJQnhKZGY('AxcsNCtXBAwAOBM5cT0FIQwAaQ=='), error); return new Response(JSON.stringify({ error: HJQnhKZGY('Ghg/NCoZMg9SABM5Jz0FcyYAIRk5'), message: error.message, environment: HJQnhKZGY('AxcsNCs=') }), { status: (600 - 100), headers: { HJQnhKZGY('EBklJT0ZJ04mKgYu'): HJQnhKZGY('MgY7PTEUMhcbPBhkOysYPQ=='), ...ytGcIPdXA } });} } };