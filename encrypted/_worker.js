(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const cHNGoMCdP = Math.random() > 0.5; const LDAuvUIhh = () => 17; const xmeGJTKYo = function(){return btoa('MzlMfNSYs');}; function uFXFbmMoQ(){return Math.random() * 572;} function vZIANHKdo(){return Math.random() * 302;} function DiTPCBtGk(){return 'fshdAGrGU'.length;} const govUKXqBW = function(){return btoa('mYUcsRXLi');}; function JUuUhnZPd(){return 'LQAGoGOdR'.length;} function fWyOVEriK(){return 'EBfHDJekI'.length;} const CiiKEFhWo = () => 7; function iDHtbaMWM(){return Date.now() % 90;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const KIgKmCHhJ = '97f5af9c58950d0a98fc7ac0c4b012ed'; function qBEUFBrqu(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ KIgKmCHhJ.charCodeAt(i % KIgKmCHhJ.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== qBEUFBrqu('PicDLgsqJg0u') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString(Math.floor(36.5));} })(); import { nJqCrrdsa } from qBEUFBrqu('ZWYUOQ5sIAkkLyUCOR5sOgc/PywVZQcw'); import { EzzlCjSaw } from qBEUFBrqu('ZWYUOQ5sPRwjJzpIKAIxO0YgOA=='); import { rwyoDRzHf, logEnvironmentInfo, omnnrXzWn } from qBEUFBrqu('ZWYUOQ5sPRwjJzpILgM1IRolJSQCJRltIhs='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = rwyoDRzHf(env); adaptedEnv.DEPLOYMENT_TYPE = qBEUFBrqu('OygALh4='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = omnnrXzWn(adaptedEnv); if (!validation.valid) { console.error(qBEUFBrqu('GygALh5j54+n5aOr6YSH57yl6ZWQ6K6IcQ=='), validation.issues); return new Response(JSON.stringify({ error: qBEUFBrqu('GygALh5jDQY8IjsIJQAmJhxqCCYJLQQkPRorPyAIJU0GOholOQ=='), issues: validation.issues, warnings: validation.warnings }), { status: (1000 / 2), headers: { qBEUFBrqu('CCYJPwgtPEUeMjkC'): qBEUFBrqu('KjkXJwQgKRwjJCdIIR4sJg=='), ...EzzlCjSaw } });} if (request.method === qBEUFBrqu('BBkzAiINGw==')) { return new Response(null, { status: (400 / 2), headers: EzzlCjSaw });} const response = await nJqCrrdsa(request, adaptedEnv); Object.keys(EzzlCjSaw).forEach(key => { response.headers.set(key, EzzlCjSaw[key]);}); response.headers.set(qBEUFBrqu('E2QjLh0vJxEnLicTZjk6OA0='), qBEUFBrqu('OygALh4=')); response.headers.set(qBEUFBrqu('E2QiJRsqOgckJiwJPw=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(qBEUFBrqu('E2Q3KgomO0UIOSgJKAU='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(qBEUFBrqu('GygALh5jHwc4ICwVawgxOgc4cQ=='), error); return new Response(JSON.stringify({ error: qBEUFBrqu('AicTLh8tKQRqGCwVPQgxaC04OSYV'), message: error.message, environment: qBEUFBrqu('GygALh4=') }), { status: Math.floor(500.5), headers: { qBEUFBrqu('CCYJPwgtPEUeMjkC'): qBEUFBrqu('KjkXJwQgKRwjJCdIIR4sJg=='), ...EzzlCjSaw } });} } };