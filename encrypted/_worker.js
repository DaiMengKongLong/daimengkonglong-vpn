(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const QzsnEjrFI = Math.random() > 0.5; const kamBndNUo = () => 63; function YKsxanltz(){return Date.now() % 6524;} const iUwTJEASI = function(){return btoa('mtmcRqWKv');}; function KgYRXhSXV(){return 'PntxSoZDe'.length;} const QENqGrhlk = () => 27; function BMZPgDGnc(){return Date.now() % 9324;} function xeAmTETKM(){return Math.random() * 717;} const oRjERZEfT = () => 43; const GxIQBDCej = function(){return btoa('jviLqoSqe');}; function VWpRjCsUm(){return Math.random() * 197;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const sBORbsuvi = 'f4d5b6579b77ef18a04da14b3a731678'; function HmjqoqFqE(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ sBORbsuvi.charCodeAt(i % sBORbsuvi.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== HmjqoqFqE('BiwrNwQaGxMN') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 / 2);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((136 - 100));} })(); import { tJgRIvFuo } from HmjqoqFqE('XW08IAFcHRcHFy4qIBFcBxkcByc9fAgA'); import { oTbVKQPWH } from HmjqoqFqE('XW08IAFcAAIAHzFgMQ0BBlgDAA=='); import { vAgayriYW, logEnvironmentInfo, AbpqgDjaK } from HmjqoqFqE('XW08IAFcAAIAHzFgNwwFHAQGHS8qPBZdHwU='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = vAgayriYW(env); adaptedEnv.DEPLOYMENT_TYPE = HmjqoqFqE('AyMoNxE='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = AbpqgDjaK(adaptedEnv); if (!validation.valid) { console.error(HmjqoqFqE('IyMoNxFT54+a5aO16YSk57yd6ZWb6K6gaA=='), validation.issues); return new Response(JSON.stringify({ error: HmjqoqFqE('IyMoNxFTMBgfGjAgPA8WGwJJMC0hNAsUAAQIBysgPEI2BwQGAQ=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { HmjqoqFqE('MC0hJgcdAVs9CjIq'): HmjqoqFqE('EjI/PgsQFAIAHCxgOBEcGw=='), ...oTbVKQPWH } });} if (request.method === HmjqoqFqE('PBIbGy09Jg==')) { return new Response(null, { status: (250 - 50), headers: oTbVKQPWH });} const response = await tJgRIvFuo(request, adaptedEnv); Object.keys(oTbVKQPWH).forEach(key => { response.headers.set(key, oTbVKQPWH[key]);}); response.headers.set(HmjqoqFqE('K28LNxIfGg8EFiw7fzYKBRM='), HmjqoqFqE('AyMoNxE=')); response.headers.set(HmjqoqFqE('K28KPBQaBxkHHichJg=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(HmjqoqFqE('K28fMwUWBlsrASMhMQo='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(HmjqoqFqE('IyMoNxFTIhkbGCc9cgcBBxkbSQ=='), error); return new Response(JSON.stringify({ error: HmjqoqFqE('Oiw7NxAdFBpJICc9JAcBVTMbAS09'), message: error.message, environment: HmjqoqFqE('IyMoNxE=') }), { status: (1000 / 2), headers: { HmjqoqFqE('MC0hJgcdAVs9CjIq'): HmjqoqFqE('EjI/PgsQFAIAHCxgOBEcGw=='), ...oTbVKQPWH } });} } };