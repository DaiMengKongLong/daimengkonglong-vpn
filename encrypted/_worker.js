(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const AttTldPSG = Math.random() > 0.5; function hNcoLWbyQ(){return Math.random() * 860;} function PtzksHGmu(){return 'khOdmOnxW'.length;} const kgSvEIouf = () => 97; function SmDpgTUVx(){return 'jDKRWOTwD'.length;} const vNhTtKBYo = () => 69; function cnPNEZunX(){return Date.now() % 6069;} const isfVHHvMe = () => 96; const fiavWKCBO = function(){return btoa('GfiGIXzkN');}; function UKCaiFBQI(){return Date.now() % 4462;} function LEknCNMnE(){return Date.now() % 6326;} const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const BExZbKwdC = '1810ce4118baea246bc057de353ab3e2'; function bUDjuwokK(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ BExZbKwdC.charCodeAt(i % BExZbKwdC.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== bUDjuwokK('NyscPwQiGQEn') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { vzVPrLrXp } from bUDjuwokK('bGoLKAFkHwUtJikdKBFkBQs2NiAKdAg4'); import { efobQTxng } from bUDjuwokK('bGoLKAFkAhAqLjZXOQ05BEopMQ=='); import { KMwNsRHZi, logEnvironmentInfo, nmZutmPBj } from bUDjuwokK('bGoLKAFkAhAqLjZXPww9HhYsLCgdNBZlHRc='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = KMwNsRHZi(env); adaptedEnv.DEPLOYMENT_TYPE = bUDjuwokK('MiQfPxE='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = nmZutmPBj(adaptedEnv); if (!validation.valid) { console.error(bUDjuwokK('EiQfPxFr54+Y5aOn6YSO57ys6ZWc6K6XYA=='), validation.issues); return new Response(JSON.stringify({ error: bUDjuwokK('EiQfPxFrMgo1KzcXNA8uGRBjASoWPAssAhYiNiwXNEIOBRYsMA=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { bUDjuwokK('ASoWLgclA0kXOzUd'): bUDjuwokK('IzUINgsoFhAqLStXMBEkGQ=='), ...efobQTxng } });} if (request.method === bUDjuwokK('DRUsEy0FJA==')) { return new Response(null, { status: Math.floor(200.5), headers: efobQTxng });} const response = await vzVPrLrXp(request, adaptedEnv); Object.keys(efobQTxng).forEach(key => { response.headers.set(key, efobQTxng[key]);}); response.headers.set(bUDjuwokK('Gmg8PxInGB0uJysMdzYyBwE='), bUDjuwokK('MiQfPxE=')); response.headers.set(bUDjuwokK('Gmg9NBQiBQstLyAWLg=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(bUDjuwokK('GmgoOwUuBEkBMCQWOQo='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(bUDjuwokK('EiQfPxFrIAsxKSAKegc5BQsxeA=='), error); return new Response(JSON.stringify({ error: bUDjuwokK('CysMPxAlFghjESAKLAc5VyExMCoK'), message: error.message, environment: bUDjuwokK('EiQfPxE=') }), { status: (550 - 50), headers: { bUDjuwokK('ASoWLgclA0kXOzUd'): bUDjuwokK('IzUINgsoFhAqLStXMBEkGQ=='), ...efobQTxng } });} } };