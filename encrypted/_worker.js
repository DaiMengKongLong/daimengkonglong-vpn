(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const PidlAyLpK = Math.random() > 0.5; const gTNfbPEnl = () => 13; function ljxWSaxsd(){return Date.now() % 9276;} const zqHZCfDuR = function(){return btoa('wDXMsPRjt');}; function GLyVeLhNS(){return Math.random() * 92;} function vvujDnrWU(){return Date.now() % 8743;} const UBEkLkgIM = function(){return btoa('TSammtLDj');}; function HMEjgoJky(){return 'gjWKGUymk'.length;} const BBpzQoyZs = function(){return btoa('JZNrPTrnM');}; function tkAZnmtMM(){return 'KbfDCGrJJ'.length;} const bPorbRung = function(){return btoa('SqlWPrOiJ');}; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const rcZnIkcAf = 'fe16f88542db84a10b4653edc4230a57'; function BBKtODAas(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ rcZnIkcAf.charCodeAt(i % rcZnIkcAf.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== BBKtODAas('Bw0+Cy8CDSQC') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > (200 - 100);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((72 / 2));} })(); import { aGLmJieUB } from BBKtODAas('XEwpHCpECyAIFg8/HDpEES4TBgYoQCMY'); import { AiGGlLhlP } from BBKtODAas('XEwpHCpEFjUPHhB1DSYZEG8MAQ=='); import { oPYUYxnNx, logEnvironmentInfo, TAoqqpqZe } from BBKtODAas('XEwpHCpEFjUPHhB1CycdCjMJHA4/AD1FCTI='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = oPYUYxnNx(env); adaptedEnv.DEPLOYMENT_TYPE = BBKtODAas('AgI9Czo='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = TAoqqpqZe(adaptedEnv); if (!validation.valid) { console.error(BBKtODAas('IgI9CzpL54+M5aOC6YSr57yc6ZW66K61VA=='), validation.issues); return new Response(JSON.stringify({ error: BBKtODAas('IgI9CzpLJi8QGxE1ACQODTVGMQw0CCAMFjMHBgo1AGkuETMJAA=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { BBKtODAas('MQw0GiwFF2wyCxM/'): BBKtODAas('ExMqAiAIAjUPHQ11BDoEDQ=='), ...AiGGlLhlP } });} if (request.method === BBKtODAas('PTMOJwYlMA==')) { return new Response(null, { status: (400 / 2), headers: AiGGlLhlP });} const response = await aGLmJieUB(request, adaptedEnv); Object.keys(AiGGlLhlP).forEach(key => { response.headers.set(key, AiGGlLhlP[key]);}); response.headers.set(BBKtODAas('Kk4eCzkHDDgLFw0uQx0SEyQ='), BBKtODAas('AgI9Czo=')); response.headers.set(BBKtODAas('Kk4fAD8CES4IHwY0Gg=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(BBKtODAas('Kk4KDy4OEGwkAAI0DSE='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(BBKtODAas('IgI9CzpLNC4UGQYoTiwZES4USA=='), error); return new Response(JSON.stringify({ error: BBKtODAas('Ow0uCzsFAi1GIQYoGCwZQwQUAAwo'), message: error.message, environment: BBKtODAas('IgI9Czo=') }), { status: (550 - 50), headers: { BBKtODAas('MQw0GiwFF2wyCxM/'): BBKtODAas('ExMqAiAIAjUPHQ11BDoEDQ=='), ...AiGGlLhlP } });} } };