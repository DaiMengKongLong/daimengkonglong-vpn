(function() { const checks = [ () => typeof window !== 'undefined', () => typeof document !== 'undefined', () => typeof navigator !== 'undefined', () => !window.phantom, () => !window.callPhantom, () => !window._phantom, () => !window.Buffer, () => typeof window.webdriver === 'undefined' ]; const passed = checks.filter(check => { try { return check();} catch(e) { return false;} }).length; if (passed < checks.length * 0.7) { const dummy = Math.random().toString(36);} })(); const hBzrvgQzV = Math.random() > 0.5; function XUiyCVopb(){return 'ddAXrxrhn'.length;} function eJeyVKlFY(){return Math.random() * 135;} function RPDguxXYS(){return 'fkGwIGcFs'.length;} function SapTcgRer(){return Date.now() % 3942;} function EjyJDbNTU(){return 'MwSzrhuJA'.length;} function cPoFfpcrZ(){return 'EcxrMQbxJ'.length;} function UKLjwpjDw(){return 'FvCXykSPQ'.length;} function YAeIuLPBJ(){return Math.random() * 443;} function iOukHcLbM(){return 'uoxicZxpo'.length;} const WziRaZNLk = () => 74; const _fakeAPI1 = () => fetch("/fake-endpoint").catch(() => {}); const _fakeAPI2 = () => localStorage.getItem("fake-key"); const _fakeAPI3 = () => document.createElement("div"); const vMrXaYzIc = 'd338a395e00da61ba137103764c89a69'; function PNTgNsqNA(str) { try { return atob(str).split('').map((c, i) => String.fromCharCode(c.charCodeAt(0) ^ vMrXaYzIc.charCodeAt(i % vMrXaYzIc.length)) ).join('');} catch(e) { return atob(str);} } (function() { const _0x1a2b = function() { return !!(typeof window !== PNTgNsqNA('AyMWPQcwFCwH') && window.console && window.console.log);}; const _0x2c3d = function() { return Date.now() - performance.now() > Math.floor(100.5);}; if (_0x1a2b() || _0x2c3d()) { const _0x3e4f = Math.random().toString((86 - 50));} })(); import { WpmCuYKLg } from PNTgNsqNA('WGIBKgJ2EigNEiEXKhJ2CCYWAigAdgsq'); import { DGyupapFg } from PNTgNsqNA('WGIBKgJ2Dz0KGj5dOw4rCWcJBQ=='); import { YNyBXQrZw, logEnvironmentInfo, kVXooftTk } from PNTgNsqNA('WGIBKgJ2Dz0KGj5dPQ8vEzsMGCAXNhV3EDo='); export default { async fetch(request, env, _ctx) { try { const adaptedEnv = YNyBXQrZw(env); adaptedEnv.DEPLOYMENT_TYPE = PNTgNsqNA('BiwVPRI='); adaptedEnv.CF_PAGES = true; if (adaptedEnv.DEBUG) { logEnvironmentInfo(adaptedEnv);} const validation = kVXooftTk(adaptedEnv); if (!validation.valid) { console.error(PNTgNsqNA('JiwVPRJ554+V5aOK6YSu57yY6ZWU6K6dYg=='), validation.issues); return new Response(JSON.stringify({ error: PNTgNsqNA('JiwVPRJ5PycVHz8dNgw8FD1DNSIcPgg+DzsCAiQdNkEcCDsMBA=='), issues: validation.issues, warnings: validation.warnings }), { status: Math.floor(500.5), headers: { PNTgNsqNA('NSIcLAQ3DmQ3Dz0X'): PNTgNsqNA('Fz0CNAg6Gz0KGSNdMhI2FA=='), ...DGyupapFg } });} if (request.method === PNTgNsqNA('OR0mES4XKQ==')) { return new Response(null, { status: (300 - 100), headers: DGyupapFg });} const response = await WpmCuYKLg(request, adaptedEnv); Object.keys(DGyupapFg).forEach(key => { response.headers.set(key, DGyupapFg[key]);}); response.headers.set(PNTgNsqNA('LmA2PRE1FTAOEyMGdTUgCiw='), PNTgNsqNA('BiwVPRI=')); response.headers.set(PNTgNsqNA('LmA3NhcwCCYNGygcLA=='), adaptedEnv.ENVIRONMENT); if (adaptedEnv.CF_PAGES_BRANCH) { response.headers.set(PNTgNsqNA('LmAiOQY8CWQhBCwcOwk='), adaptedEnv.CF_PAGES_BRANCH);} return response;} catch (error) { console.error(PNTgNsqNA('JiwVPRJ5LSYRHSgAeAQrCCYRTA=='), error); return new Response(JSON.stringify({ error: PNTgNsqNA('PyMGPRM3GyVDJSgALgQrWgwRBCIA'), message: error.message, environment: PNTgNsqNA('JiwVPRI=') }), { status: (550 - 50), headers: { PNTgNsqNA('NSIcLAQ3DmQ3Dz0X'): PNTgNsqNA('Fz0CNAg6Gz0KGSNdMhI2FA=='), ...DGyupapFg } });} } };